{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\components\\\\NewAddressModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //styling\n\nimport styled from \"styled-components\"; //axios\n\nimport axios from \"axios\"; //redux\n\nimport { useDispatch, useSelector } from \"react-redux\"; //material ui\n\nimport TextField from \"@material-ui/core/TextField\"; //icons\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CloseIcon from \"@material-ui/icons/Close\"; //components\n\nimport Button from \"../components/Button\";\n\nconst NewAddressModal = ({\n  addAddressModal,\n  modalHandler,\n  setAddAddressModal,\n  appLink\n}) => {\n  _s();\n\n  //state\n  const [newName, setNewName] = useState(\"\");\n  const [newSurname, setNewSurname] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [newStreet, setNewStreet] = useState(\"\");\n  const [newHouseNr, setNewHouseNr] = useState(\"\");\n  const [newPostalCode, setNewPostalCode] = useState(\"\");\n  const [newCity, setNewCity] = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.login); //handlers\n  //this handler checks if inputs are empty if so it adds new address to user\n\n  const addAddressHandler = () => {\n    if (newName !== \"\" && newSurname !== \"\" && newPhone !== \"\" && newPhone.length >= 9 && newCity !== \"\" && newStreet !== \"\" && newHouseNr !== \"\" && newPostalCode !== \"\") {\n      axios.put(`${appLink}/users/${user.id}/`, {\n        name: user.name,\n        surname: user.surname,\n        email: user.email,\n        password: user.password,\n        favorites: user.favorites,\n        accessibility: user.accessibility,\n        addresses: [...user.addresses, {\n          name: newName,\n          surname: newSurname,\n          phone: newPhone,\n          houseNr: newHouseNr,\n          street: newStreet,\n          city: newCity,\n          postalCode: newPostalCode,\n          id: user.addresses.length !== 0 ? user.addresses.length + 1 : 1\n        }]\n      }).then(resp => {\n        modalHandler();\n      }).catch(error => {});\n    } else {\n      alert(\"inputs cant be empty\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressComponent, {\n    style: {\n      display: addAddressModal ? \"block\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-address\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => modalHandler(),\n          children: [\" \", /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), \"Go back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"close-modal\",\n          onClick: () => setAddAddressModal(!addAddressModal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: newName,\n          label: \"Name\",\n          onChange: e => setNewName(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: newSurname,\n          label: \"Surname\",\n          onChange: e => setNewSurname(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: newStreet,\n          label: \"Street\",\n          onChange: e => setNewStreet(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: newHouseNr,\n          label: \"House Nr\",\n          onChange: e => setNewHouseNr(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"two-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: newPostalCode,\n            label: \"Postal Code\",\n            onChange: e => setNewPostalCode(e.target.value),\n            className: \"postal input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: newCity,\n            label: \"City\",\n            onChange: e => setNewCity(e.target.value),\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: newPhone,\n          label: \"Phone\",\n          onChange: e => setNewPhone(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Save\",\n        onClick: () => addAddressHandler(),\n        variant: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewAddressModal, \"ZDe93eylXuFQQ9V5FVk21A2B5fM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewAddressModal;\nconst AddressComponent = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: rgba(0, 0, 0, 0.4);\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  .new-address {\n    background-color: white;\n    margin-left: 40%;\n    margin-top: 10%;\n    width: 25%;\n    justify-content: center;\n    padding: 1rem;\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      margin: 0;\n    }\n    .header {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      padding: 1rem;\n      span {\n        &:hover {\n          cursor: pointer;\n        }\n      }\n    }\n    .inputs {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n      padding: 1rem;\n      .input {\n        width: 100%;\n      }\n      .two-inputs {\n        width: 100%;\n        display: flex;\n      }\n      .postal {\n        margin-right: 10px;\n      }\n    }\n  }\n`;\n_c2 = AddressComponent;\nexport default NewAddressModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewAddressModal\");\n$RefreshReg$(_c2, \"AddressComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/components/NewAddressModal.js"],"names":["React","useState","styled","axios","useDispatch","useSelector","TextField","ArrowBackIosIcon","CloseIcon","Button","NewAddressModal","addAddressModal","modalHandler","setAddAddressModal","appLink","newName","setNewName","newSurname","setNewSurname","newPhone","setNewPhone","newStreet","setNewStreet","newHouseNr","setNewHouseNr","newPostalCode","setNewPostalCode","newCity","setNewCity","dispatch","user","state","login","addAddressHandler","length","put","id","name","surname","email","password","favorites","accessibility","addresses","phone","houseNr","street","city","postalCode","then","resp","catch","error","alert","display","e","target","value","AddressComponent","div"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//axios\r\nimport axios from \"axios\";\r\n//redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//material ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//icons\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n//components\r\nimport Button from \"../components/Button\";\r\n\r\nconst NewAddressModal = ({\r\n  addAddressModal,\r\n  modalHandler,\r\n  setAddAddressModal,\r\n  appLink,\r\n}) => {\r\n  //state\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newSurname, setNewSurname] = useState(\"\");\r\n  const [newPhone, setNewPhone] = useState(\"\");\r\n  const [newStreet, setNewStreet] = useState(\"\");\r\n  const [newHouseNr, setNewHouseNr] = useState(\"\");\r\n  const [newPostalCode, setNewPostalCode] = useState(\"\");\r\n  const [newCity, setNewCity] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.login);\r\n  //handlers\r\n  //this handler checks if inputs are empty if so it adds new address to user\r\n  const addAddressHandler = () => {\r\n    if (\r\n      newName !== \"\" &&\r\n      newSurname !== \"\" &&\r\n      newPhone !== \"\" &&\r\n      newPhone.length >= 9 &&\r\n      newCity !== \"\" &&\r\n      newStreet !== \"\" &&\r\n      newHouseNr !== \"\" &&\r\n      newPostalCode !== \"\"\r\n    ) {\r\n      axios\r\n        .put(`${appLink}/users/${user.id}/`, {\r\n          name: user.name,\r\n          surname: user.surname,\r\n          email: user.email,\r\n          password: user.password,\r\n          favorites: user.favorites,\r\n          accessibility: user.accessibility,\r\n          addresses: [\r\n            ...user.addresses,\r\n            {\r\n              name: newName,\r\n              surname: newSurname,\r\n              phone: newPhone,\r\n              houseNr: newHouseNr,\r\n              street: newStreet,\r\n              city: newCity,\r\n              postalCode: newPostalCode,\r\n              id: user.addresses.length !== 0 ? user.addresses.length + 1 : 1,\r\n            },\r\n          ],\r\n        })\r\n        .then((resp) => {\r\n          modalHandler();\r\n        })\r\n        .catch((error) => {});\r\n    } else {\r\n      alert(\"inputs cant be empty\");\r\n    }\r\n  };\r\n  return (\r\n    <AddressComponent style={{ display: addAddressModal ? \"block\" : \"none\" }}>\r\n      <div className=\"new-address\">\r\n        <div className=\"header\">\r\n          <span onClick={() => modalHandler()}>\r\n            {\" \"}\r\n            <ArrowBackIosIcon />\r\n            Go back\r\n          </span>\r\n          <CloseIcon\r\n            className=\"close-modal\"\r\n            onClick={() => setAddAddressModal(!addAddressModal)}\r\n          />\r\n        </div>\r\n        <div className=\"inputs\">\r\n          <TextField\r\n            value={newName}\r\n            label=\"Name\"\r\n            onChange={(e) => setNewName(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <TextField\r\n            value={newSurname}\r\n            label=\"Surname\"\r\n            onChange={(e) => setNewSurname(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <TextField\r\n            value={newStreet}\r\n            label=\"Street\"\r\n            onChange={(e) => setNewStreet(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <TextField\r\n            value={newHouseNr}\r\n            label=\"House Nr\"\r\n            onChange={(e) => setNewHouseNr(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <div className=\"two-inputs\">\r\n            <TextField\r\n              value={newPostalCode}\r\n              label=\"Postal Code\"\r\n              onChange={(e) => setNewPostalCode(e.target.value)}\r\n              className=\"postal input\"\r\n            />\r\n            <TextField\r\n              value={newCity}\r\n              label=\"City\"\r\n              onChange={(e) => setNewCity(e.target.value)}\r\n              className=\"input\"\r\n            />\r\n          </div>\r\n          <TextField\r\n            value={newPhone}\r\n            label=\"Phone\"\r\n            onChange={(e) => setNewPhone(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        <Button\r\n          label=\"Save\"\r\n          onClick={() => addAddressHandler()}\r\n          variant=\"black\"\r\n        />\r\n      </div>\r\n    </AddressComponent>\r\n  );\r\n};\r\n\r\nconst AddressComponent = styled.div`\r\n  position: absolute;\r\n  z-index: 5;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  .new-address {\r\n    background-color: white;\r\n    margin-left: 40%;\r\n    margin-top: 10%;\r\n    width: 25%;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0;\r\n    }\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      width: 100%;\r\n      padding: 1rem;\r\n      span {\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n    .inputs {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: 100%;\r\n      padding: 1rem;\r\n      .input {\r\n        width: 100%;\r\n      }\r\n      .two-inputs {\r\n        width: 100%;\r\n        display: flex;\r\n      }\r\n      .postal {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewAddressModal;\r\n"]},"metadata":{},"sourceType":"module"}