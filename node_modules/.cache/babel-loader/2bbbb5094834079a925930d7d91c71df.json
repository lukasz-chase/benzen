{"ast":null,"code":"import { DECREASE_CART_AMOUNT, INCREASE_CART_AMOUNT, REMOVE_FROM_CART, DISCOUNT_CART_PRICE, SET_CART_PRICE, CHANGE_ITEM_PRICE, ADD_TO_CART } from \"../constants/actionTypes\";\nconst initState = {\n  cart: [],\n  cartPrice: 0,\n  discount: false\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return { ...state,\n        cart: [...state.cart, action.payload.item]\n      };\n\n    case INCREASE_CART_AMOUNT:\n      console.log(state.cart.map(item => item._id === action.payload.id && item.size === action.payload.size && item.cartAmount < item.amount ? \"found\" : \"notfound\"));\n      console.log(state.cart.map(item => item.cartAmount < 50 ? \"less than 50\" : \"also doesnt work\"));\n      console.log(action.payload);\n      let tempCart = state.cart.map(cartItem => cartItem._id === action.payload.id && cartItem.size === action.payload.size && cartItem.cartAmount < cartItem.amount && cartItem.cartAmount < 50 ? cartItem = { ...cartItem,\n        cartAmount: cartItem.cartAmount + 1\n      } : cartItem);\n      return { ...state,\n        cart: tempCart\n      };\n\n    case DECREASE_CART_AMOUNT:\n      let tempCart2 = [];\n\n      if (action.payload.amount === 1) {\n        tempCart2 = state.cart.filter(item => !(item._id === action.payload.id && item.size === action.payload.size));\n      } else {\n        tempCart2 = state.cart.map(cartItem => cartItem._id === action.payload.id && cartItem.size === action.payload.size ? cartItem = { ...cartItem,\n          cartAmount: cartItem.cartAmount - 1\n        } : cartItem);\n      }\n\n      return { ...state,\n        cart: tempCart2\n      };\n\n    case REMOVE_FROM_CART:\n      return { ...state,\n        cart: state.cart.filter(item => !(item._id === action.payload._id && item.size === action.payload.size))\n      };\n\n    case DISCOUNT_CART_PRICE:\n      return { ...state,\n        discount: action.payload.boolean\n      };\n\n    case SET_CART_PRICE:\n      return { ...state,\n        cartPrice: action.payload.price.toFixed(2)\n      };\n\n    case CHANGE_ITEM_PRICE:\n      const newCart = state.cart.map(item => item._id === action.payload._id && item.size === action.payload.size ? item = { ...item,\n        discount: true,\n        beforeDiscount: item.price,\n        price: item.price * 0.9\n      } : item);\n      return { ...state,\n        cart: newCart\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/reducers/cartReducer.js"],"names":["DECREASE_CART_AMOUNT","INCREASE_CART_AMOUNT","REMOVE_FROM_CART","DISCOUNT_CART_PRICE","SET_CART_PRICE","CHANGE_ITEM_PRICE","ADD_TO_CART","initState","cart","cartPrice","discount","cartReducer","state","action","type","payload","item","console","log","map","_id","id","size","cartAmount","amount","tempCart","cartItem","tempCart2","filter","boolean","price","toFixed","newCart","beforeDiscount"],"mappings":"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","sourcesContent":["import {\r\n  DECREASE_CART_AMOUNT,\r\n  INCREASE_CART_AMOUNT,\r\n  REMOVE_FROM_CART,\r\n  DISCOUNT_CART_PRICE,\r\n  SET_CART_PRICE,\r\n  CHANGE_ITEM_PRICE,\r\n  ADD_TO_CART,\r\n} from \"../constants/actionTypes\";\r\n\r\nconst initState = {\r\n  cart: [],\r\n  cartPrice: 0,\r\n  discount: false,\r\n};\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.payload.item],\r\n      };\r\n    case INCREASE_CART_AMOUNT:\r\n      console.log(\r\n        state.cart.map((item) =>\r\n          item._id === action.payload.id &&\r\n          item.size === action.payload.size &&\r\n          item.cartAmount < item.amount\r\n            ? \"found\"\r\n            : \"notfound\"\r\n        )\r\n      );\r\n      console.log(\r\n        state.cart.map((item) =>\r\n          item.cartAmount < 50 ? \"less than 50\" : \"also doesnt work\"\r\n        )\r\n      );\r\n      console.log(action.payload);\r\n      let tempCart = state.cart.map((cartItem) =>\r\n        cartItem._id === action.payload.id &&\r\n        cartItem.size === action.payload.size &&\r\n        cartItem.cartAmount < cartItem.amount &&\r\n        cartItem.cartAmount < 50\r\n          ? (cartItem = { ...cartItem, cartAmount: cartItem.cartAmount + 1 })\r\n          : cartItem\r\n      );\r\n      return { ...state, cart: tempCart };\r\n    case DECREASE_CART_AMOUNT:\r\n      let tempCart2 = [];\r\n      if (action.payload.amount === 1) {\r\n        tempCart2 = state.cart.filter(\r\n          (item) =>\r\n            !(\r\n              item._id === action.payload.id &&\r\n              item.size === action.payload.size\r\n            )\r\n        );\r\n      } else {\r\n        tempCart2 = state.cart.map((cartItem) =>\r\n          cartItem._id === action.payload.id &&\r\n          cartItem.size === action.payload.size\r\n            ? (cartItem = { ...cartItem, cartAmount: cartItem.cartAmount - 1 })\r\n            : cartItem\r\n        );\r\n      }\r\n      return { ...state, cart: tempCart2 };\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter(\r\n          (item) =>\r\n            !(\r\n              item._id === action.payload._id &&\r\n              item.size === action.payload.size\r\n            )\r\n        ),\r\n      };\r\n    case DISCOUNT_CART_PRICE:\r\n      return {\r\n        ...state,\r\n        discount: action.payload.boolean,\r\n      };\r\n    case SET_CART_PRICE:\r\n      return {\r\n        ...state,\r\n        cartPrice: action.payload.price.toFixed(2),\r\n      };\r\n    case CHANGE_ITEM_PRICE:\r\n      const newCart = state.cart.map((item) =>\r\n        item._id === action.payload._id && item.size === action.payload.size\r\n          ? (item = {\r\n              ...item,\r\n              discount: true,\r\n              beforeDiscount: item.price,\r\n              price: item.price * 0.9,\r\n            })\r\n          : item\r\n      );\r\n      return {\r\n        ...state,\r\n        cart: newCart,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}