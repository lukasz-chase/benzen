{"ast":null,"code":"import * as api from \"../api\";\nimport { GET_ORDERS, GET_ORDER, GET_USER_ORDERS, CREATE_ORDER, UPDATE_ORDER } from \"../constants/actionTypes\";\nexport const getOrders = () => async dispatch => {\n  try {\n    const ordersData = await api.getOrders();\n    dispatch({\n      type: GET_ORDERS,\n      payload: {\n        orders: ordersData.data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getOrder = id => async dispatch => {\n  try {\n    const orderData = await api.getOrder(id);\n    dispatch({\n      type: GET_ORDER,\n      payload: orderData.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUserOrders = id => async dispatch => {\n  try {\n    const userOrders = await api.getUserOrders(id);\n    dispatch({\n      type: GET_USER_ORDERS,\n      payload: userOrders.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createOrder = orderData => async dispatch => {\n  try {\n    const order = await api.createOrder(orderData);\n    dispatch({\n      type: CREATE_ORDER,\n      payload: order.data\n    });\n  } catch (error) {\n    console.log(error);\n  } // await Promise.all(\n  //   orderData.cart.map((item) => api.decreaseItemAmount(item._id))\n  // );\n\n};\nexport const updateOrder = id => async dispatch => {\n  try {\n    const order = await api.updateOrder(id);\n    dispatch({\n      type: UPDATE_ORDER,\n      payload: order\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/actions/ordersAction.js"],"names":["api","GET_ORDERS","GET_ORDER","GET_USER_ORDERS","CREATE_ORDER","UPDATE_ORDER","getOrders","dispatch","ordersData","type","payload","orders","data","error","console","log","getOrder","id","orderData","getUserOrders","userOrders","createOrder","order","updateOrder"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,YALF,QAMO,0BANP;AAQA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACF,UAAMC,UAAU,GAAG,MAAMR,GAAG,CAACM,SAAJ,EAAzB;AACAC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAEH,UAAU,CAACI;AADZ;AAFF,KAAD,CAAR;AAMD,GARD,CAQE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAZM;AAaP,OAAO,MAAMG,QAAQ,GAAIC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AAClD,MAAI;AACF,UAAMW,SAAS,GAAG,MAAMlB,GAAG,CAACgB,QAAJ,CAAaC,EAAb,CAAxB;AACAV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,SADC;AAEPQ,MAAAA,OAAO,EAAEQ,SAAS,CAACN;AAFZ,KAAD,CAAR;AAID,GAND,CAME,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAWP,OAAO,MAAMM,aAAa,GAAIF,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACvD,MAAI;AACF,UAAMa,UAAU,GAAG,MAAMpB,GAAG,CAACmB,aAAJ,CAAkBF,EAAlB,CAAzB;AACAV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,eADC;AAEPO,MAAAA,OAAO,EAAEU,UAAU,CAACR;AAFb,KAAD,CAAR;AAID,GAND,CAME,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAWP,OAAO,MAAMQ,WAAW,GAAIH,SAAD,IAAe,MAAOX,QAAP,IAAoB;AAC5D,MAAI;AACF,UAAMe,KAAK,GAAG,MAAMtB,GAAG,CAACqB,WAAJ,CAAgBH,SAAhB,CAApB;AACAX,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEL,YADC;AAEPM,MAAAA,OAAO,EAAEY,KAAK,CAACV;AAFR,KAAD,CAAR;AAID,GAND,CAME,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAT2D,CAU5D;AACA;AACA;;AACD,CAbM;AAcP,OAAO,MAAMU,WAAW,GAAIN,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACrD,MAAI;AACF,UAAMe,KAAK,GAAG,MAAMtB,GAAG,CAACuB,WAAJ,CAAgBN,EAAhB,CAApB;AACAV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEJ,YADC;AAEPK,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOT,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM","sourcesContent":["import * as api from \"../api\";\r\nimport {\r\n  GET_ORDERS,\r\n  GET_ORDER,\r\n  GET_USER_ORDERS,\r\n  CREATE_ORDER,\r\n  UPDATE_ORDER,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport const getOrders = () => async (dispatch) => {\r\n  try {\r\n    const ordersData = await api.getOrders();\r\n    dispatch({\r\n      type: GET_ORDERS,\r\n      payload: {\r\n        orders: ordersData.data,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getOrder = (id) => async (dispatch) => {\r\n  try {\r\n    const orderData = await api.getOrder(id);\r\n    dispatch({\r\n      type: GET_ORDER,\r\n      payload: orderData.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getUserOrders = (id) => async (dispatch) => {\r\n  try {\r\n    const userOrders = await api.getUserOrders(id);\r\n    dispatch({\r\n      type: GET_USER_ORDERS,\r\n      payload: userOrders.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const createOrder = (orderData) => async (dispatch) => {\r\n  try {\r\n    const order = await api.createOrder(orderData);\r\n    dispatch({\r\n      type: CREATE_ORDER,\r\n      payload: order.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  // await Promise.all(\r\n  //   orderData.cart.map((item) => api.decreaseItemAmount(item._id))\r\n  // );\r\n};\r\nexport const updateOrder = (id) => async (dispatch) => {\r\n  try {\r\n    const order = await api.updateOrder(id);\r\n    dispatch({\r\n      type: UPDATE_ORDER,\r\n      payload: order,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}