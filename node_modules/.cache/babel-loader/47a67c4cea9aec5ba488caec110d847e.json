{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\pages\\\\AccountPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //react router\n\nimport { useLocation } from \"react-router\";\nimport { Link, useHistory } from \"react-router-dom\"; //redux\n\nimport { useDispatch, useSelector } from \"react-redux\"; //actions\n\nimport { loadUsersOrders } from \"../actions/ordersAction\"; //styling\n\nimport styled from \"styled-components\"; //material ui\n\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\"; //icons\n\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\nimport HomeIcon from \"@material-ui/icons/Home\"; //data\n\nimport { accountInputs, passwordInputs } from \"../descriptions/inputs\"; //components\n\nimport Order from \"../components/Order\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\nimport AddressComponent from \"../components/AddressComponent\";\n\nconst AccountPage = () => {\n  _s();\n\n  const [deleteInfo, setDeleteInfo] = useState(false); //users State\n\n  const [userData, setUserData] = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const [passwordData, setPasswordData] = useState({\n    password: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [order, setOrder] = useState([]); //account state\n\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState(\"\");\n  const [accountErrorMsg, setAccountErrorMsg] = useState(\"\"); //use\n\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch(); //pathName\n\n  const pathName = location.pathname.split(\"/\")[3];\n  const orderDetails = location.pathname.split(\"/\")[4];\n  const {\n    user,\n    isLoading\n  } = useSelector(state => state.user);\n  console.log(user);\n  useEffect(() => {\n    if (user) {\n      dispatch(loadUsersOrders(user.id));\n    }\n  }, [dispatch, user]);\n  const {\n    userOrders\n  } = useSelector(state => state.orders); //handlers\n\n  const userAccountHandler = () => {};\n\n  const passwordChangeHandler = () => {};\n\n  const deleteAccountHandler = () => {};\n\n  const LogOutHandler = () => {\n    localStorage.removeItem(\"userId\");\n    history.push(\"/customer/account/login\");\n  };\n\n  const orderDetailsHandler = (id, order) => {\n    history.push(`/customer/account/orders/${id}`);\n    setOrder(order);\n    window.scrollTo(0, 0);\n  };\n\n  const handleForm = (e, setData, data) => setData({ ...data,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user && /*#__PURE__*/_jsxDEV(LoggedInComponent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/customer/account/orders\",\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: pathName === \"orders\" ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(ShoppingBasketIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), \" Orders\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/customer/account/address\",\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: pathName === \"address\" ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), \" Address data\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/customer/account/info\",\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: pathName === \"info\" ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(AccountBoxIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), \" Account info\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"log-out\",\n            onClick: () => LogOutHandler(),\n            children: [/*#__PURE__*/_jsxDEV(MeetingRoomIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), \" Log out\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-side\",\n        children: [pathName === \"info\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoComponent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"My account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: accountErrorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), accountInputs.map(input => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                label: input.label,\n                name: input.name,\n                value: userData[input.name],\n                type: input.type,\n                handleChange: e => handleForm(e, setUserData, userData),\n                required: input.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => userAccountHandler(),\n              label: \"Save changes\",\n              variant: \"black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-change\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Password change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: passwordErrorMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this), passwordInputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n                label: input.label,\n                name: input.name,\n                value: passwordData[input.name],\n                type: input.type,\n                handleChange: e => handleForm(e, setPasswordData, passwordData),\n                required: input.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 25\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => passwordChangeHandler(),\n                label: \"Change password\",\n                variant: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete-acc\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setDeleteInfo(true),\n                children: \"Delete account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: deleteInfo ? \"block\" : \"none\"\n                },\n                className: \"delete-confirmation\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Are you sure you want to delete account?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => deleteAccountHandler(),\n                    label: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => setDeleteInfo(false),\n                    label: \"No\",\n                    variant: \"black\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), pathName === \"orders\" && !orderDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders\",\n          children: userOrders.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n              \"aria-label\": \"breadcrumb\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"My account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/customer/account/orders\",\n                className: \"link\",\n                children: \"My orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 23\n            }, this), userOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"order-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"price-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Nr:\", order.id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [(order.cartPrice + order.deliveryPrice).toFixed(2), \" \", \"GBP\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"items-image\",\n                  children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.images[0].img,\n                    alt: item.name,\n                    onClick: () => orderDetailsHandler(order.id, order)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 33\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"order-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [order.date, \" \", order.time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: order.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"details-button\",\n                    onClick: () => orderDetailsHandler(order.id, order),\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 27\n              }, this)]\n            }, order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-orders\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"You didnt order anything\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Go and explore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/woman\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  label: \"Women\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/man\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  label: \"Men\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), orderDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"specific-order\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            \"aria-label\": \"breadcrumb\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"My account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/customer/account/orders\",\n              className: \"link\",\n              children: \"My orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: order.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this), pathName === \"address\" && /*#__PURE__*/_jsxDEV(AddressComponent, {\n          user: user,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountPage, \"BIprCWdRsMyXvV49DzJOv5dhxZ0=\", false, function () {\n  return [useLocation, useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = AccountPage;\nconst LoggedInComponent = styled.div`\n  display: flex;\n  margin-top: 2rem;\n  min-height: 70vh;\n  @media screen and (max-width: 1000px) {\n    flex-direction: column;\n  }\n  .left-side {\n    width: 20%;\n    display: flex;\n    align-items: flex-end;\n    flex-direction: column;\n    font-size: 1.5rem;\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      align-items: flex-start;\n      margin: 0rem 0.5rem;\n    }\n    .active {\n      font-weight: bold;\n    }\n    ul {\n      list-style: none;\n      li {\n        &:hover {\n          color: rgba(0, 0, 0, 0.6);\n        }\n      }\n      .log-out {\n        &:hover {\n          cursor: pointer;\n          color: #e0431c;\n        }\n      }\n    }\n  }\n  .right-side {\n    width: 60%;\n    justify-content: center;\n    align-items: Center;\n\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      margin: 0rem 0.5rem;\n    }\n    .infoComponent {\n      display: flex;\n      flex-direction: column;\n      margin-left: 2rem;\n      @media screen and (max-width: 1000px) {\n        margin: 0rem;\n      }\n      .info {\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        .input {\n          width: 15rem;\n        }\n        .password-change {\n          display: flex;\n          flex-direction: column;\n        }\n        .delete-acc {\n          .delete-confirmation {\n            display: flex;\n            flex-direction: column;\n            margin: 1rem 0rem;\n          }\n        }\n      }\n    }\n    .line {\n      width: 100%;\n      height: 1px;\n      background-color: black;\n      margin: 2rem 0rem;\n      @media screen and (max-width: 1000px) {\n        margin: 1rem 0;\n        width: 90%;\n      }\n    }\n    .inputs-grid {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n    }\n    .no-orders {\n      display: flex;\n      flex-direction: column;\n      text-align: center;\n      .buttons {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n    font-size: 2rem;\n    .orders {\n      margin-left: 2rem;\n      @media screen and (max-width: 1000px) {\n        margin-left: 0;\n      }\n      .order {\n        display: flex;\n        justify-content: space-between;\n        font-size: 1.5rem;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n        padding: 1rem;\n\n        .order-left {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          .price-info {\n            display: flex;\n            flex-direction: column;\n            font-size: 1rem;\n          }\n          .items-image {\n            display: flex;\n            flex-wrap: wrap;\n            img {\n              margin: 0.5rem 0.5rem 0.5rem 0;\n              height: 10rem;\n              width: 8rem;\n            }\n          }\n        }\n        .order-right {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          .time-info {\n            display: flex;\n            flex-direction: column;\n            font-size: 1rem;\n            span {\n              align-self: flex-end;\n            }\n          }\n          .details {\n            align-self: flex-end;\n            span {\n              padding: 0.6rem;\n              font-size: 1rem;\n              font-weight: bold;\n              text-transform: upperCase;\n              &:hover {\n                background-color: rgba(0, 0, 0, 0.2);\n                cursor: pointer;\n              }\n            }\n          }\n        }\n      }\n    }\n    .specific-order {\n      margin-left: 2rem;\n      display: flex;\n      flex-direction: column;\n      font-size: 1.5rem;\n      @media screen and (max-width: 1000px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n_c2 = LoggedInComponent;\nexport default AccountPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccountPage\");\n$RefreshReg$(_c2, \"LoggedInComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/pages/AccountPage.js"],"names":["React","useState","useEffect","useLocation","Link","useHistory","useDispatch","useSelector","loadUsersOrders","styled","Breadcrumbs","ShoppingBasketIcon","AccountBoxIcon","MeetingRoomIcon","HomeIcon","accountInputs","passwordInputs","Order","Input","Button","AddressComponent","AccountPage","deleteInfo","setDeleteInfo","userData","setUserData","name","surname","email","phone","passwordData","setPasswordData","password","newPassword","confirmPassword","order","setOrder","passwordErrorMsg","setPasswordErrorMsg","accountErrorMsg","setAccountErrorMsg","location","history","dispatch","pathName","pathname","split","orderDetails","user","isLoading","state","console","log","id","userOrders","orders","userAccountHandler","passwordChangeHandler","deleteAccountHandler","LogOutHandler","localStorage","removeItem","push","orderDetailsHandler","window","scrollTo","handleForm","e","setData","data","target","value","map","input","label","type","required","display","length","cartPrice","deliveryPrice","toFixed","items","item","images","img","date","time","status","LoggedInComponent","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//react router\r\nimport { useLocation } from \"react-router\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n//redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//actions\r\nimport { loadUsersOrders } from \"../actions/ordersAction\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//material ui\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\n//icons\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n//data\r\nimport { accountInputs, passwordInputs } from \"../descriptions/inputs\";\r\n//components\r\nimport Order from \"../components/Order\";\r\nimport Input from \"../components/Input\";\r\nimport Button from \"../components/Button\";\r\nimport AddressComponent from \"../components/AddressComponent\";\r\n\r\nconst AccountPage = () => {\r\n  const [deleteInfo, setDeleteInfo] = useState(false);\r\n  //users State\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    surname: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const [passwordData, setPasswordData] = useState({\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [order, setOrder] = useState([]);\r\n  //account state\r\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState(\"\");\r\n  const [accountErrorMsg, setAccountErrorMsg] = useState(\"\");\r\n  //use\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  //pathName\r\n  const pathName = location.pathname.split(\"/\")[3];\r\n  const orderDetails = location.pathname.split(\"/\")[4];\r\n  const { user, isLoading } = useSelector((state) => state.user);\r\n  console.log(user);\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(loadUsersOrders(user.id));\r\n    }\r\n  }, [dispatch, user]);\r\n  const { userOrders } = useSelector((state) => state.orders);\r\n\r\n  //handlers\r\n  const userAccountHandler = () => {};\r\n  const passwordChangeHandler = () => {};\r\n  const deleteAccountHandler = () => {};\r\n\r\n  const LogOutHandler = () => {\r\n    localStorage.removeItem(\"userId\");\r\n    history.push(\"/customer/account/login\");\r\n  };\r\n  const orderDetailsHandler = (id, order) => {\r\n    history.push(`/customer/account/orders/${id}`);\r\n    setOrder(order);\r\n    window.scrollTo(0, 0);\r\n  };\r\n  const handleForm = (e, setData, data) =>\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  return (\r\n    <>\r\n      {user && (\r\n        <LoggedInComponent>\r\n          <div className=\"left-side\">\r\n            <ul>\r\n              <Link to=\"/customer/account/orders\" className=\"link\">\r\n                <li className={pathName === \"orders\" ? \"active\" : \"\"}>\r\n                  <ShoppingBasketIcon /> Orders\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/customer/account/address\" className=\"link\">\r\n                <li className={pathName === \"address\" ? \"active\" : \"\"}>\r\n                  <HomeIcon /> Address data\r\n                </li>\r\n              </Link>\r\n\r\n              <Link to=\"/customer/account/info\" className=\"link\">\r\n                <li className={pathName === \"info\" ? \"active\" : \"\"}>\r\n                  <AccountBoxIcon /> Account info\r\n                </li>\r\n              </Link>\r\n              <li className=\"log-out\" onClick={() => LogOutHandler()}>\r\n                <MeetingRoomIcon /> Log out\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {user && (\r\n            <div className=\"right-side\">\r\n              {pathName === \"info\" && (\r\n                <div className=\"infoComponent\">\r\n                  <div className=\"info\">\r\n                    <span>My account</span>\r\n                    <div className=\"line\"></div>\r\n                    <span>{accountErrorMsg}</span>\r\n                    {accountInputs.map((input) => (\r\n                      <span>\r\n                        <Input\r\n                          label={input.label}\r\n                          name={input.name}\r\n                          value={userData[input.name]}\r\n                          type={input.type}\r\n                          handleChange={(e) =>\r\n                            handleForm(e, setUserData, userData)\r\n                          }\r\n                          required={input.required}\r\n                        />\r\n                      </span>\r\n                    ))}\r\n                    <Button\r\n                      onClick={() => userAccountHandler()}\r\n                      label=\"Save changes\"\r\n                      variant=\"black\"\r\n                    />\r\n                    <div className=\"line\"></div>\r\n                    <div className=\"password-change\">\r\n                      <span>Password change</span>\r\n                      <span>{passwordErrorMsg}</span>\r\n                      {passwordInputs.map((input) => (\r\n                        <Input\r\n                          label={input.label}\r\n                          name={input.name}\r\n                          value={passwordData[input.name]}\r\n                          type={input.type}\r\n                          handleChange={(e) =>\r\n                            handleForm(e, setPasswordData, passwordData)\r\n                          }\r\n                          required={input.required}\r\n                        />\r\n                      ))}\r\n                      <Button\r\n                        onClick={() => passwordChangeHandler()}\r\n                        label=\"Change password\"\r\n                        variant=\"black\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\"></div>\r\n                    <div className=\"delete-acc\">\r\n                      <span onClick={() => setDeleteInfo(true)}>\r\n                        Delete account\r\n                      </span>\r\n                      <div\r\n                        style={{ display: deleteInfo ? \"block\" : \"none\" }}\r\n                        className=\"delete-confirmation\"\r\n                      >\r\n                        <span>Are you sure you want to delete account?</span>\r\n                        <div className=\"buttons\">\r\n                          <Button\r\n                            onClick={() => deleteAccountHandler()}\r\n                            label=\"Yes\"\r\n                          />\r\n                          <Button\r\n                            onClick={() => setDeleteInfo(false)}\r\n                            label=\"No\"\r\n                            variant=\"black\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"line\"></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {pathName === \"orders\" && !orderDetails && (\r\n                <div className=\"orders\">\r\n                  {userOrders.length > 0 ? (\r\n                    <>\r\n                      <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <span>My account</span>\r\n                        <Link to=\"/customer/account/orders\" className=\"link\">\r\n                          My orders\r\n                        </Link>\r\n                      </Breadcrumbs>\r\n                      {userOrders.map((order) => (\r\n                        <div className=\"order\" key={order.id}>\r\n                          <div className=\"order-left\">\r\n                            <div className=\"price-info\">\r\n                              <span>Nr:{order.id}</span>\r\n                              <span>\r\n                                <b>\r\n                                  {(\r\n                                    order.cartPrice + order.deliveryPrice\r\n                                  ).toFixed(2)}{\" \"}\r\n                                  GBP\r\n                                </b>\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"items-image\">\r\n                              {order.items.map((item) => (\r\n                                <img\r\n                                  src={item.images[0].img}\r\n                                  alt={item.name}\r\n                                  key={item.id}\r\n                                  onClick={() =>\r\n                                    orderDetailsHandler(order.id, order)\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"order-right\">\r\n                            <div className=\"time-info\">\r\n                              <span>\r\n                                {order.date} {order.time}\r\n                              </span>\r\n                              <span>{order.status}</span>\r\n                            </div>\r\n                            <div className=\"details\">\r\n                              <span\r\n                                className=\"details-button\"\r\n                                onClick={() =>\r\n                                  orderDetailsHandler(order.id, order)\r\n                                }\r\n                              >\r\n                                Details\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"no-orders\">\r\n                      <h2>You didnt order anything</h2>\r\n                      <span>Go and explore</span>\r\n                      <div className=\"buttons\">\r\n                        <Link to=\"/woman\">\r\n                          <Button label=\"Women\" />\r\n                        </Link>\r\n                        <Link to=\"/man\">\r\n                          <Button label=\"Men\" />\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {orderDetails && (\r\n                <div className=\"specific-order\">\r\n                  <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <span>My account</span>\r\n                    <Link to=\"/customer/account/orders\" className=\"link\">\r\n                      My orders\r\n                    </Link>\r\n                    <span>{order.id}</span>\r\n                  </Breadcrumbs>\r\n                  <Order />\r\n                </div>\r\n              )}\r\n              {pathName === \"address\" && (\r\n                <AddressComponent user={user} isLoading={isLoading} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </LoggedInComponent>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst LoggedInComponent = styled.div`\r\n  display: flex;\r\n  margin-top: 2rem;\r\n  min-height: 70vh;\r\n  @media screen and (max-width: 1000px) {\r\n    flex-direction: column;\r\n  }\r\n  .left-side {\r\n    width: 20%;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    flex-direction: column;\r\n    font-size: 1.5rem;\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      align-items: flex-start;\r\n      margin: 0rem 0.5rem;\r\n    }\r\n    .active {\r\n      font-weight: bold;\r\n    }\r\n    ul {\r\n      list-style: none;\r\n      li {\r\n        &:hover {\r\n          color: rgba(0, 0, 0, 0.6);\r\n        }\r\n      }\r\n      .log-out {\r\n        &:hover {\r\n          cursor: pointer;\r\n          color: #e0431c;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .right-side {\r\n    width: 60%;\r\n    justify-content: center;\r\n    align-items: Center;\r\n\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0rem 0.5rem;\r\n    }\r\n    .infoComponent {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-left: 2rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin: 0rem;\r\n      }\r\n      .info {\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: left;\r\n        .input {\r\n          width: 15rem;\r\n        }\r\n        .password-change {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        .delete-acc {\r\n          .delete-confirmation {\r\n            display: flex;\r\n            flex-direction: column;\r\n            margin: 1rem 0rem;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .line {\r\n      width: 100%;\r\n      height: 1px;\r\n      background-color: black;\r\n      margin: 2rem 0rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin: 1rem 0;\r\n        width: 90%;\r\n      }\r\n    }\r\n    .inputs-grid {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .no-orders {\r\n      display: flex;\r\n      flex-direction: column;\r\n      text-align: center;\r\n      .buttons {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n    }\r\n    font-size: 2rem;\r\n    .orders {\r\n      margin-left: 2rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin-left: 0;\r\n      }\r\n      .order {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        font-size: 1.5rem;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n        padding: 1rem;\r\n\r\n        .order-left {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: space-between;\r\n          .price-info {\r\n            display: flex;\r\n            flex-direction: column;\r\n            font-size: 1rem;\r\n          }\r\n          .items-image {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            img {\r\n              margin: 0.5rem 0.5rem 0.5rem 0;\r\n              height: 10rem;\r\n              width: 8rem;\r\n            }\r\n          }\r\n        }\r\n        .order-right {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: space-between;\r\n          .time-info {\r\n            display: flex;\r\n            flex-direction: column;\r\n            font-size: 1rem;\r\n            span {\r\n              align-self: flex-end;\r\n            }\r\n          }\r\n          .details {\r\n            align-self: flex-end;\r\n            span {\r\n              padding: 0.6rem;\r\n              font-size: 1rem;\r\n              font-weight: bold;\r\n              text-transform: upperCase;\r\n              &:hover {\r\n                background-color: rgba(0, 0, 0, 0.2);\r\n                cursor: pointer;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .specific-order {\r\n      margin-left: 2rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      font-size: 1.5rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin-left: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default AccountPage;\r\n"]},"metadata":{},"sourceType":"module"}