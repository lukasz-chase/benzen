{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\pages\\\\AccountInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //styling\n\nimport styled from \"styled-components\"; //components\n\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\"; //data\n\nimport { accountInputs, passwordInputs } from \"../descriptions/inputs\"; //actions\n\nimport { updateInfo, updatePassword } from \"../actions/userActions\";\n\nconst AccountInfo = ({\n  user,\n  isLoading\n}) => {\n  _s();\n\n  const [deleteInfo, setDeleteInfo] = useState(false); //users State\n\n  const [userData, setUserData] = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\"\n  });\n  const [passwordData, setPasswordData] = useState({\n    password: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState(\"\");\n  const [accountErrorMsg, setAccountErrorMsg] = useState(\"\");\n  useEffect(() => {\n    if (!isLoading) {\n      setUserData({\n        name: user.name,\n        surname: user.surname,\n        email: user.email\n      });\n    }\n  }, [isLoading]); //handlers\n\n  const userAccountHandler = () => {\n    if (userData.name !== \"\" && userData.surname !== \"\" && userData.email !== \"\") {\n      dispatchEvent(updateInfo(user._id, userData));\n    } else {\n      setAccountErrorMsg(\"Inputs can`t be empty\");\n    }\n  };\n\n  const passwordChangeHandler = () => {\n    if (passwordData.password !== \"\" && passwordData.newPassword !== \"\" && passwordData.confirmPassword !== \"\") {\n      if (passwordData.newPassword !== passwordData.confirmPassword) {\n        dispatchEvent(updateInfo(user._id, updatePassword));\n      } else {\n        setPasswordErrorMsg(\"passwords have to match\");\n      }\n    } else {\n      setPasswordErrorMsg(\"Inputs can`t be empty\");\n    }\n  };\n\n  const deleteAccountHandler = () => {};\n\n  const handleForm = (e, setData, data) => setData({ ...data,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/_jsxDEV(InfoComponent, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"My account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: accountErrorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), accountInputs.map(input => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: input.label,\n          name: input.name,\n          value: userData[input.name],\n          type: input.type,\n          handleChange: e => handleForm(e, setUserData, userData),\n          required: input.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => userAccountHandler(),\n        label: \"Save changes\",\n        variant: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-change\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Password change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: passwordErrorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), passwordInputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n          label: input.label,\n          name: input.name,\n          value: passwordData[input.name],\n          type: input.type,\n          handleChange: e => handleForm(e, setPasswordData, passwordData),\n          required: input.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => passwordChangeHandler(),\n          label: \"Change password\",\n          variant: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-acc\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setDeleteInfo(true),\n          children: \"Delete account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: deleteInfo ? \"block\" : \"none\"\n          },\n          className: \"delete-confirmation\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Are you sure you want to delete account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => deleteAccountHandler(),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setDeleteInfo(false),\n              label: \"No\",\n              variant: \"black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountInfo, \"HK2uku7R6dRwZJDNC4tCLKiAivg=\");\n\n_c = AccountInfo;\nconst InfoComponent = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 2rem;\n  @media screen and (max-width: 1000px) {\n    margin: 0rem;\n  }\n  .info {\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    .input {\n      width: 15rem;\n    }\n    .password-change {\n      display: flex;\n      flex-direction: column;\n    }\n    .delete-acc {\n      .delete-confirmation {\n        display: flex;\n        flex-direction: column;\n        margin: 1rem 0rem;\n      }\n    }\n  }\n`;\n_c2 = InfoComponent;\nexport default AccountInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccountInfo\");\n$RefreshReg$(_c2, \"InfoComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/pages/AccountInfo.js"],"names":["React","useState","useEffect","styled","Input","Button","accountInputs","passwordInputs","updateInfo","updatePassword","AccountInfo","user","isLoading","deleteInfo","setDeleteInfo","userData","setUserData","name","surname","email","passwordData","setPasswordData","password","newPassword","confirmPassword","passwordErrorMsg","setPasswordErrorMsg","accountErrorMsg","setAccountErrorMsg","userAccountHandler","dispatchEvent","_id","passwordChangeHandler","deleteAccountHandler","handleForm","e","setData","data","target","value","map","input","label","type","required","display","InfoComponent","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//components\r\nimport Input from \"../components/Input\";\r\nimport Button from \"../components/Button\";\r\n//data\r\nimport { accountInputs, passwordInputs } from \"../descriptions/inputs\";\r\n//actions\r\nimport { updateInfo, updatePassword } from \"../actions/userActions\";\r\n\r\nconst AccountInfo = ({ user, isLoading }) => {\r\n  const [deleteInfo, setDeleteInfo] = useState(false);\r\n  //users State\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    surname: \"\",\r\n    email: \"\",\r\n  });\r\n  const [passwordData, setPasswordData] = useState({\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState(\"\");\r\n  const [accountErrorMsg, setAccountErrorMsg] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      setUserData({\r\n        name: user.name,\r\n        surname: user.surname,\r\n        email: user.email,\r\n      });\r\n    }\r\n  }, [isLoading]);\r\n  //handlers\r\n  const userAccountHandler = () => {\r\n    if (\r\n      userData.name !== \"\" &&\r\n      userData.surname !== \"\" &&\r\n      userData.email !== \"\"\r\n    ) {\r\n      dispatchEvent(updateInfo(user._id, userData));\r\n    } else {\r\n      setAccountErrorMsg(\"Inputs can`t be empty\");\r\n    }\r\n  };\r\n  const passwordChangeHandler = () => {\r\n    if (\r\n      passwordData.password !== \"\" &&\r\n      passwordData.newPassword !== \"\" &&\r\n      passwordData.confirmPassword !== \"\"\r\n    ) {\r\n      if (passwordData.newPassword !== passwordData.confirmPassword) {\r\n        dispatchEvent(updateInfo(user._id, updatePassword));\r\n      } else {\r\n        setPasswordErrorMsg(\"passwords have to match\");\r\n      }\r\n    } else {\r\n      setPasswordErrorMsg(\"Inputs can`t be empty\");\r\n    }\r\n  };\r\n  const deleteAccountHandler = () => {};\r\n  const handleForm = (e, setData, data) =>\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  return (\r\n    <InfoComponent>\r\n      <div className=\"info\">\r\n        <span>My account</span>\r\n        <div className=\"line\"></div>\r\n        <span>{accountErrorMsg}</span>\r\n        {accountInputs.map((input) => (\r\n          <span>\r\n            <Input\r\n              label={input.label}\r\n              name={input.name}\r\n              value={userData[input.name]}\r\n              type={input.type}\r\n              handleChange={(e) => handleForm(e, setUserData, userData)}\r\n              required={input.required}\r\n            />\r\n          </span>\r\n        ))}\r\n        <Button\r\n          onClick={() => userAccountHandler()}\r\n          label=\"Save changes\"\r\n          variant=\"black\"\r\n        />\r\n        <div className=\"line\"></div>\r\n        <div className=\"password-change\">\r\n          <span>Password change</span>\r\n          <span>{passwordErrorMsg}</span>\r\n          {passwordInputs.map((input) => (\r\n            <Input\r\n              label={input.label}\r\n              name={input.name}\r\n              value={passwordData[input.name]}\r\n              type={input.type}\r\n              handleChange={(e) => handleForm(e, setPasswordData, passwordData)}\r\n              required={input.required}\r\n            />\r\n          ))}\r\n          <Button\r\n            onClick={() => passwordChangeHandler()}\r\n            label=\"Change password\"\r\n            variant=\"black\"\r\n          />\r\n        </div>\r\n        <div className=\"line\"></div>\r\n        <div className=\"delete-acc\">\r\n          <span onClick={() => setDeleteInfo(true)}>Delete account</span>\r\n          <div\r\n            style={{ display: deleteInfo ? \"block\" : \"none\" }}\r\n            className=\"delete-confirmation\"\r\n          >\r\n            <span>Are you sure you want to delete account?</span>\r\n            <div className=\"buttons\">\r\n              <Button onClick={() => deleteAccountHandler()} label=\"Yes\" />\r\n              <Button\r\n                onClick={() => setDeleteInfo(false)}\r\n                label=\"No\"\r\n                variant=\"black\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"line\"></div>\r\n      </div>\r\n    </InfoComponent>\r\n  );\r\n};\r\n\r\nconst InfoComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 2rem;\r\n  @media screen and (max-width: 1000px) {\r\n    margin: 0rem;\r\n  }\r\n  .info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n    .input {\r\n      width: 15rem;\r\n    }\r\n    .password-change {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .delete-acc {\r\n      .delete-confirmation {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 1rem 0rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountInfo;\r\n"]},"metadata":{},"sourceType":"module"}