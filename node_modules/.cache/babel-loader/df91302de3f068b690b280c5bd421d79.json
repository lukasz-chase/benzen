{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\components\\\\EditAddressModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //styling\n\nimport styled from \"styled-components\"; //icons\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CloseIcon from \"@material-ui/icons/Close\"; //actions\n\nimport { loginAction } from \"../actions/loginAction\"; //redux\n\nimport { useDispatch, useSelector } from \"react-redux\"; //axios\n\nimport axios from \"axios\"; //material ui\n\nimport TextField from \"@material-ui/core/TextField\";\n\nconst EditAddressModal = ({\n  editModal,\n  setEditModal,\n  name,\n  surname,\n  street,\n  houseNr,\n  postalCode,\n  city,\n  phone,\n  setName,\n  setSurname,\n  setHouseNr,\n  setStreet,\n  setPostalCode,\n  setCity,\n  setPhone,\n  editModalHandler,\n  addressId,\n  appLink\n}) => {\n  _s();\n\n  //state\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.login); //handlers\n  //this handler checks if inputs are empty if they aren't it searches users addresses to match passed to function id, then it edits this found address\n\n  const editAddressHandler = addressId => {\n    if (name !== \"\" && surname !== \"\" && phone !== \"\" && phone.length === 9 && houseNr !== \"\" && street !== \"\" && city !== \"\" && postalCode !== \"\") {\n      const newAddress = user.addresses.map(location => location.id === addressId ? location = {\n        name: name,\n        surname: surname,\n        phone: phone,\n        houseNr: houseNr,\n        street: street,\n        city: city,\n        postalCode: postalCode,\n        id: addressId\n      } : location);\n      axios.put(`${appLink}/users/${user.id}/`, {\n        name: user.name,\n        surname: user.surname,\n        email: user.email,\n        password: user.password,\n        favorites: user.favorites,\n        addresses: newAddress,\n        accessibility: user.accessibility\n      }).then(resp => {\n        dispatch(loginAction(localStorage.getItem(\"userId\")));\n        editModalHandler();\n      }).catch(error => {});\n    } else {\n      alert(\"inputs cant be empty\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressComponent, {\n    style: {\n      display: editModal ? \"block\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-address\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => editModalHandler(),\n          children: [\" \", /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), \"Go back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"close-modal\",\n          onClick: () => setEditModal(!editModal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: name,\n          label: \"Name\",\n          onChange: e => setName(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: surname,\n          label: \"Surname\",\n          onChange: e => setSurname(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: street,\n          label: \"Street\",\n          onChange: e => setStreet(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: houseNr,\n          label: \"House Nr\",\n          onChange: e => setHouseNr(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"two-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: postalCode,\n            label: \"Postal Code\",\n            onChange: e => setPostalCode(e.target.value),\n            className: \"postal input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: city,\n            label: \"City\",\n            onChange: e => setCity(e.target.value),\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: phone,\n          label: \"Phone\",\n          onChange: e => setPhone(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-black\",\n        onClick: () => editAddressHandler(addressId),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditAddressModal, \"FUGwOHTRI+DmOFaBIVBGv8hjKds=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditAddressModal;\nconst AddressComponent = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: rgba(0, 0, 0, 0.4);\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  .edit-address {\n    background-color: white;\n    margin-left: 40%;\n    margin-top: 10%;\n    width: 25%;\n    justify-content: center;\n    padding: 1rem;\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      margin: 0;\n    }\n    .header {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      padding: 1rem;\n      span {\n        &:hover {\n          cursor: pointer;\n        }\n      }\n    }\n    .inputs {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n      padding: 1rem;\n      .input {\n        width: 100%;\n      }\n      .two-inputs {\n        width: 100%;\n        display: flex;\n      }\n      .postal {\n        margin-right: 10px;\n      }\n    }\n    .button-black {\n      width: 100%;\n      padding: 1rem;\n      font-size: 1.5rem;\n      text-align: center;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n`;\n_c2 = AddressComponent;\nexport default EditAddressModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditAddressModal\");\n$RefreshReg$(_c2, \"AddressComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/components/EditAddressModal.js"],"names":["React","styled","ArrowBackIosIcon","CloseIcon","loginAction","useDispatch","useSelector","axios","TextField","EditAddressModal","editModal","setEditModal","name","surname","street","houseNr","postalCode","city","phone","setName","setSurname","setHouseNr","setStreet","setPostalCode","setCity","setPhone","editModalHandler","addressId","appLink","dispatch","user","state","login","editAddressHandler","length","newAddress","addresses","map","location","id","put","email","password","favorites","accessibility","then","resp","localStorage","getItem","catch","error","alert","display","e","target","value","AddressComponent","div"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//icons\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n//actions\r\nimport { loginAction } from \"../actions/loginAction\";\r\n//redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//axios\r\nimport axios from \"axios\";\r\n//material ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst EditAddressModal = ({\r\n  editModal,\r\n  setEditModal,\r\n  name,\r\n  surname,\r\n  street,\r\n  houseNr,\r\n  postalCode,\r\n  city,\r\n  phone,\r\n  setName,\r\n  setSurname,\r\n  setHouseNr,\r\n  setStreet,\r\n  setPostalCode,\r\n  setCity,\r\n  setPhone,\r\n  editModalHandler,\r\n  addressId,\r\n  appLink,\r\n}) => {\r\n  //state\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.login);\r\n  //handlers\r\n  //this handler checks if inputs are empty if they aren't it searches users addresses to match passed to function id, then it edits this found address\r\n  const editAddressHandler = (addressId) => {\r\n    if (\r\n      name !== \"\" &&\r\n      surname !== \"\" &&\r\n      phone !== \"\" &&\r\n      phone.length === 9 &&\r\n      houseNr !== \"\" &&\r\n      street !== \"\" &&\r\n      city !== \"\" &&\r\n      postalCode !== \"\"\r\n    ) {\r\n      const newAddress = user.addresses.map((location) =>\r\n        location.id === addressId\r\n          ? (location = {\r\n              name: name,\r\n              surname: surname,\r\n              phone: phone,\r\n              houseNr: houseNr,\r\n              street: street,\r\n              city: city,\r\n              postalCode: postalCode,\r\n              id: addressId,\r\n            })\r\n          : location\r\n      );\r\n      axios\r\n        .put(`${appLink}/users/${user.id}/`, {\r\n          name: user.name,\r\n          surname: user.surname,\r\n          email: user.email,\r\n          password: user.password,\r\n          favorites: user.favorites,\r\n          addresses: newAddress,\r\n          accessibility: user.accessibility,\r\n        })\r\n        .then((resp) => {\r\n          dispatch(loginAction(localStorage.getItem(\"userId\")));\r\n          editModalHandler();\r\n        })\r\n        .catch((error) => {});\r\n    } else {\r\n      alert(\"inputs cant be empty\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddressComponent style={{ display: editModal ? \"block\" : \"none\" }}>\r\n      <div className=\"edit-address\">\r\n        <div className=\"header\">\r\n          <span onClick={() => editModalHandler()}>\r\n            {\" \"}\r\n            <ArrowBackIosIcon />\r\n            Go back\r\n          </span>\r\n          <CloseIcon\r\n            className=\"close-modal\"\r\n            onClick={() => setEditModal(!editModal)}\r\n          />\r\n        </div>\r\n        <div className=\"inputs\">\r\n          <TextField\r\n            value={name}\r\n            label=\"Name\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <TextField\r\n            value={surname}\r\n            label=\"Surname\"\r\n            onChange={(e) => setSurname(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <TextField\r\n            value={street}\r\n            label=\"Street\"\r\n            onChange={(e) => setStreet(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <TextField\r\n            value={houseNr}\r\n            label=\"House Nr\"\r\n            onChange={(e) => setHouseNr(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <div className=\"two-inputs\">\r\n            <TextField\r\n              value={postalCode}\r\n              label=\"Postal Code\"\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n              className=\"postal input\"\r\n            />\r\n            <TextField\r\n              value={city}\r\n              label=\"City\"\r\n              onChange={(e) => setCity(e.target.value)}\r\n              className=\"input\"\r\n            />\r\n          </div>\r\n          <TextField\r\n            value={phone}\r\n            label=\"Phone\"\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"button-black\"\r\n          onClick={() => editAddressHandler(addressId)}\r\n        >\r\n          Save\r\n        </div>\r\n      </div>\r\n    </AddressComponent>\r\n  );\r\n};\r\n\r\nconst AddressComponent = styled.div`\r\n  position: absolute;\r\n  z-index: 5;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  .edit-address {\r\n    background-color: white;\r\n    margin-left: 40%;\r\n    margin-top: 10%;\r\n    width: 25%;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0;\r\n    }\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      width: 100%;\r\n      padding: 1rem;\r\n      span {\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n    .inputs {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: 100%;\r\n      padding: 1rem;\r\n      .input {\r\n        width: 100%;\r\n      }\r\n      .two-inputs {\r\n        width: 100%;\r\n        display: flex;\r\n      }\r\n      .postal {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n    .button-black {\r\n      width: 100%;\r\n      padding: 1rem;\r\n      font-size: 1.5rem;\r\n      text-align: center;\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditAddressModal;\r\n"]},"metadata":{},"sourceType":"module"}