{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\components\\\\AddressModal.js\";\nimport React from \"react\"; //styling\n\nimport styled from \"styled-components\"; //icons\n\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst AddressModal = ({\n  addressModal,\n  setModal,\n  modalHandler,\n  editModalHandler,\n  name,\n  surname,\n  phone,\n  city,\n  street,\n  houseNr,\n  postalCode,\n  setStreet,\n  setName,\n  setSurname,\n  setCity,\n  setPostalCode,\n  setPhone,\n  setHouseNr,\n  setAddressId,\n  setChosenAddress,\n  addressId\n}) => {\n  const user = JSON.parse(localStorage.getItem(\"profile\")); //handlers\n\n  const chooseButton = () => {\n    if (name !== \"\" && surname !== \"\" && phone !== \"\" && phone.length >= 9 && city !== \"\" && street !== \"\" && houseNr !== \"\" && postalCode !== \"\") {\n      setChosenAddress(true);\n      setModal(false);\n    }\n  };\n\n  const addressChooseHandler = (id, name, surname, city, postalCode, street, phone, houseNr) => {\n    setName(name);\n    setSurname(surname);\n    setCity(city);\n    setPostalCode(postalCode);\n    setStreet(street);\n    setPhone(phone);\n    setHouseNr(houseNr);\n    setAddressId(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressModalComponent, {\n    style: {\n      display: addressModal ? \"block\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"address-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Delivery address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"close-modal\",\n          onClick: () => setModal(!addressModal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [user.addresses.map((address, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index + 1 === addressId ? \"single-address active-address\" : \"single-address\",\n          onClick: () => addressChooseHandler(address.id, address.name, address.surname, address.city, address.postalCode, address.street, address.phone, address.houseNr),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [address.name, \" \", address.surname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [address.street, \" \", address.houseNr, \", \", address.postalCode, \" \", address.city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: address.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => editModalHandler(),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, address.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-add-address\",\n          onClick: () => modalHandler(),\n          children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), \" Add new address\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choose-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-black\",\n            onClick: () => chooseButton(),\n            children: \"Choose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddressModal;\nconst AddressModalComponent = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: rgba(0, 0, 0, 0.4);\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  .address-info {\n    background-color: white;\n    margin-left: 40%;\n    margin-top: 10%;\n    width: 25%;\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      margin: 0;\n    }\n    .address-header {\n      padding: 1rem;\n      display: flex;\n      justify-content: space-between;\n      .close-modal {\n        &:hover {\n          cursor: pointer;\n        }\n      }\n    }\n    .active-address {\n      .checkbox {\n        background-color: black;\n      }\n    }\n    .single-address {\n      display: flex;\n      align-items: center;\n      border: 1px solid rgba(0, 0, 0, 0.4);\n      &:hover {\n        border: 1px solid rgba(0, 0, 0, 0.8);\n        cursor: pointer;\n      }\n      .checkbox {\n        border: 1px solid rgba(0, 0, 0, 0.2);\n        width: 2rem;\n        height: 2rem;\n        border-radius: 2rem;\n        margin: 0 1rem;\n        @media screen and (max-width: 1000px) {\n          width: 1rem;\n          height: 1rem;\n          border-radius: 1rem;\n          margin: 0 0.5rem;\n        }\n      }\n      .address-data {\n        display: flex;\n        flex-direction: column;\n        padding: 1rem;\n        p {\n          margin: 10px 0;\n          font-weight: bold;\n        }\n      }\n    }\n    .button-add-address {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 10px 0;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n    .choose-button {\n      width: 100%;\n      font-size: 1.5rem;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      .button-black {\n        width: 100%;\n        margin: 1rem;\n        padding: 1rem;\n      }\n    }\n  }\n`;\n_c2 = AddressModalComponent;\nexport default AddressModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddressModal\");\n$RefreshReg$(_c2, \"AddressModalComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/components/AddressModal.js"],"names":["React","styled","AddCircleOutlineIcon","CloseIcon","AddressModal","addressModal","setModal","modalHandler","editModalHandler","name","surname","phone","city","street","houseNr","postalCode","setStreet","setName","setSurname","setCity","setPostalCode","setPhone","setHouseNr","setAddressId","setChosenAddress","addressId","user","JSON","parse","localStorage","getItem","chooseButton","length","addressChooseHandler","id","display","addresses","map","address","index","AddressModalComponent","div"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//icons\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst AddressModal = ({\r\n  addressModal,\r\n  setModal,\r\n  modalHandler,\r\n  editModalHandler,\r\n  name,\r\n  surname,\r\n  phone,\r\n  city,\r\n  street,\r\n  houseNr,\r\n  postalCode,\r\n  setStreet,\r\n  setName,\r\n  setSurname,\r\n  setCity,\r\n  setPostalCode,\r\n  setPhone,\r\n  setHouseNr,\r\n  setAddressId,\r\n  setChosenAddress,\r\n  addressId,\r\n}) => {\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  //handlers\r\n  const chooseButton = () => {\r\n    if (\r\n      name !== \"\" &&\r\n      surname !== \"\" &&\r\n      phone !== \"\" &&\r\n      phone.length >= 9 &&\r\n      city !== \"\" &&\r\n      street !== \"\" &&\r\n      houseNr !== \"\" &&\r\n      postalCode !== \"\"\r\n    ) {\r\n      setChosenAddress(true);\r\n      setModal(false);\r\n    }\r\n  };\r\n  const addressChooseHandler = (\r\n    id,\r\n    name,\r\n    surname,\r\n    city,\r\n    postalCode,\r\n    street,\r\n    phone,\r\n    houseNr\r\n  ) => {\r\n    setName(name);\r\n    setSurname(surname);\r\n    setCity(city);\r\n    setPostalCode(postalCode);\r\n    setStreet(street);\r\n    setPhone(phone);\r\n    setHouseNr(houseNr);\r\n    setAddressId(id);\r\n  };\r\n  return (\r\n    <AddressModalComponent style={{ display: addressModal ? \"block\" : \"none\" }}>\r\n      <div className=\"address-info\">\r\n        <div className=\"address-header\">\r\n          <span>Delivery address</span>\r\n          <CloseIcon\r\n            className=\"close-modal\"\r\n            onClick={() => setModal(!addressModal)}\r\n          />\r\n        </div>\r\n        {user && (\r\n          <>\r\n            {user.addresses.map((address, index) => (\r\n              <div\r\n                key={address.id}\r\n                className={\r\n                  index + 1 === addressId\r\n                    ? \"single-address active-address\"\r\n                    : \"single-address\"\r\n                }\r\n                onClick={() =>\r\n                  addressChooseHandler(\r\n                    address.id,\r\n                    address.name,\r\n                    address.surname,\r\n                    address.city,\r\n                    address.postalCode,\r\n                    address.street,\r\n                    address.phone,\r\n                    address.houseNr\r\n                  )\r\n                }\r\n              >\r\n                <div className=\"checkbox\"></div>\r\n                <div className=\"address-data\">\r\n                  <span>\r\n                    {address.name} {address.surname}\r\n                  </span>\r\n                  <span>\r\n                    {address.street} {address.houseNr}, {address.postalCode}{\" \"}\r\n                    {address.city}\r\n                  </span>\r\n                  <span>{address.phone}</span>\r\n                  <p onClick={() => editModalHandler()}>Edit</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div className=\"button-add-address\" onClick={() => modalHandler()}>\r\n              <AddCircleOutlineIcon /> Add new address\r\n            </div>\r\n            <div className=\"choose-button\">\r\n              <button className=\"button-black\" onClick={() => chooseButton()}>\r\n                Choose\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </AddressModalComponent>\r\n  );\r\n};\r\n\r\nconst AddressModalComponent = styled.div`\r\n  position: absolute;\r\n  z-index: 5;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  .address-info {\r\n    background-color: white;\r\n    margin-left: 40%;\r\n    margin-top: 10%;\r\n    width: 25%;\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0;\r\n    }\r\n    .address-header {\r\n      padding: 1rem;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      .close-modal {\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n    .active-address {\r\n      .checkbox {\r\n        background-color: black;\r\n      }\r\n    }\r\n    .single-address {\r\n      display: flex;\r\n      align-items: center;\r\n      border: 1px solid rgba(0, 0, 0, 0.4);\r\n      &:hover {\r\n        border: 1px solid rgba(0, 0, 0, 0.8);\r\n        cursor: pointer;\r\n      }\r\n      .checkbox {\r\n        border: 1px solid rgba(0, 0, 0, 0.2);\r\n        width: 2rem;\r\n        height: 2rem;\r\n        border-radius: 2rem;\r\n        margin: 0 1rem;\r\n        @media screen and (max-width: 1000px) {\r\n          width: 1rem;\r\n          height: 1rem;\r\n          border-radius: 1rem;\r\n          margin: 0 0.5rem;\r\n        }\r\n      }\r\n      .address-data {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 1rem;\r\n        p {\r\n          margin: 10px 0;\r\n          font-weight: bold;\r\n        }\r\n      }\r\n    }\r\n    .button-add-address {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 10px 0;\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .choose-button {\r\n      width: 100%;\r\n      font-size: 1.5rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      .button-black {\r\n        width: 100%;\r\n        margin: 1rem;\r\n        padding: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AddressModal;\r\n"]},"metadata":{},"sourceType":"module"}