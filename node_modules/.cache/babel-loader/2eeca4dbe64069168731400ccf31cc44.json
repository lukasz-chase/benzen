{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\components\\\\AddressModal.js\";\nimport React from \"react\"; //styling\n\nimport styled from \"styled-components\"; //material ui\n\nimport Input from \"./Input\"; //icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\"; //data\n\nimport { addressInputs } from \"../descriptions/inputs\"; //components\n\nimport Button from \"./Button\";\n\nconst AddressModal = ({\n  addressData,\n  handleForm,\n  setChosenAddress,\n  areInputsEmpty,\n  setAddressData,\n  snackbarHandler,\n  setAddressModal,\n  changeModalHandler\n}) => {\n  //setting address\n  const anonymousAddressHandler = () => {\n    if (areInputsEmpty()) {\n      setAddressModal(false);\n      setChosenAddress(true);\n      snackbarHandler(\"address added successfully\", \"success\");\n    } else {\n      snackbarHandler(\"Inputs can`t be empty\", \"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressComponent, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changeModalHandler(),\n          children: [\" \", /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), \"Go back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"close-modal\",\n          onClick: () => setAddressModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: addressInputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n          label: input.label,\n          name: input.name,\n          value: addressData[input.name],\n          type: input.type,\n          handleChange: e => handleForm(e, setAddressData, addressData),\n          required: input.required\n        }, input.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"save\",\n        variant: \"black\",\n        onClick: () => anonymousAddressHandler(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddressModal;\nconst AddressComponent = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: rgba(0, 0, 0, 0.4);\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  .address {\n    background-color: white;\n    margin-left: 30%;\n    margin-top: 5%;\n    width: 40%;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem;\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      margin: 0;\n    }\n    .header {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      padding: 1rem;\n      span {\n        &:hover {\n          cursor: pointer;\n        }\n      }\n    }\n    .inputs {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n      padding: 1rem;\n      .input {\n        width: 100%;\n      }\n      .two-inputs {\n        width: 100%;\n        display: flex;\n      }\n      .postal {\n        margin-right: 10px;\n      }\n    }\n  }\n`;\n_c2 = AddressComponent;\nexport default AddressModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddressModal\");\n$RefreshReg$(_c2, \"AddressComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/components/AddressModal.js"],"names":["React","styled","Input","CloseIcon","ArrowBackIosIcon","addressInputs","Button","AddressModal","addressData","handleForm","setChosenAddress","areInputsEmpty","setAddressData","snackbarHandler","setAddressModal","changeModalHandler","anonymousAddressHandler","map","input","label","name","type","e","required","AddressComponent","div"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//material ui\r\nimport Input from \"./Input\";\r\n//icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n//data\r\nimport { addressInputs } from \"../descriptions/inputs\";\r\n//components\r\nimport Button from \"./Button\";\r\n\r\nconst AddressModal = ({\r\n  addressData,\r\n  handleForm,\r\n  setChosenAddress,\r\n  areInputsEmpty,\r\n  setAddressData,\r\n  snackbarHandler,\r\n  setAddressModal,\r\n  changeModalHandler,\r\n}) => {\r\n  //setting address\r\n  const anonymousAddressHandler = () => {\r\n    if (areInputsEmpty()) {\r\n      setAddressModal(false);\r\n      setChosenAddress(true);\r\n      snackbarHandler(\"address added successfully\", \"success\");\r\n    } else {\r\n      snackbarHandler(\"Inputs can`t be empty\", \"error\");\r\n    }\r\n  };\r\n  return (\r\n    <AddressComponent>\r\n      <div className=\"address\">\r\n        <div className=\"header\">\r\n          <span onClick={() => changeModalHandler()}>\r\n            {\" \"}\r\n            <ArrowBackIosIcon />\r\n            Go back\r\n          </span>\r\n          <CloseIcon\r\n            className=\"close-modal\"\r\n            onClick={() => setAddressModal(false)}\r\n          />\r\n        </div>\r\n        <div className=\"inputs\">\r\n          {addressInputs.map((input) => (\r\n            <Input\r\n              key={input.label}\r\n              label={input.label}\r\n              name={input.name}\r\n              value={addressData[input.name]}\r\n              type={input.type}\r\n              handleChange={(e) => handleForm(e, setAddressData, addressData)}\r\n              required={input.required}\r\n            />\r\n          ))}\r\n        </div>\r\n        <Button\r\n          label=\"save\"\r\n          variant=\"black\"\r\n          onClick={() => anonymousAddressHandler()}\r\n        >\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </AddressComponent>\r\n  );\r\n};\r\n\r\nconst AddressComponent = styled.div`\r\n  position: absolute;\r\n  z-index: 5;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  .address {\r\n    background-color: white;\r\n    margin-left: 30%;\r\n    margin-top: 5%;\r\n    width: 40%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0;\r\n    }\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      width: 100%;\r\n      padding: 1rem;\r\n      span {\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n    .inputs {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: 100%;\r\n      padding: 1rem;\r\n      .input {\r\n        width: 100%;\r\n      }\r\n      .two-inputs {\r\n        width: 100%;\r\n        display: flex;\r\n      }\r\n      .postal {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AddressModal;\r\n"]},"metadata":{},"sourceType":"module"}