{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\components\\\\EditAddressModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //styling\n\nimport styled from \"styled-components\"; //icons\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CloseIcon from \"@material-ui/icons/Close\"; //redux\n\nimport { useDispatch, useSelector } from \"react-redux\"; //axios\n\nimport axios from \"axios\"; //material ui\n\nimport TextField from \"@material-ui/core/TextField\"; //components\n\nimport Button from \"../components/Button\";\n\nconst EditAddressModal = ({\n  editModal,\n  setEditModal,\n  addressData,\n  setAddressData,\n  editModalHandler,\n  addressId,\n  appLink\n}) => {\n  _s();\n\n  //state\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.user); //handlers\n  //this handler checks if inputs are empty if they aren't it searches users addresses to match passed to function id, then it edits this found address\n\n  const editAddressHandler = addressId => {\n    if (name !== \"\" && surname !== \"\" && phone !== \"\" && phone.length === 9 && houseNr !== \"\" && street !== \"\" && city !== \"\" && postalCode !== \"\") {} else {\n      alert(\"inputs cant be empty\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressComponent, {\n    style: {\n      display: editModal ? \"block\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-address\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => editModalHandler(),\n          children: [\" \", /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \"Go back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"close-modal\",\n          onClick: () => setEditModal(!editModal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: addressInputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n          label: input.label,\n          name: input.name,\n          value: addressData[input.name],\n          type: input.type,\n          handleChange: e => handleForm(e, setAddressData, addressData),\n          required: input.required\n        }, input.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"black\",\n        label: \"Save\",\n        onClick: () => editAddressHandler(addressId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditAddressModal, \"FUGwOHTRI+DmOFaBIVBGv8hjKds=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditAddressModal;\nconst AddressComponent = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: rgba(0, 0, 0, 0.4);\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  .edit-address {\n    background-color: white;\n    margin-left: 40%;\n    margin-top: 10%;\n    width: 25%;\n    justify-content: center;\n    padding: 1rem;\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      margin: 0;\n    }\n    .header {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      padding: 1rem;\n      span {\n        &:hover {\n          cursor: pointer;\n        }\n      }\n    }\n    .inputs {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n      padding: 1rem;\n      .input {\n        width: 100%;\n      }\n      .two-inputs {\n        width: 100%;\n        display: flex;\n      }\n      .postal {\n        margin-right: 10px;\n      }\n    }\n  }\n`;\n_c2 = AddressComponent;\nexport default EditAddressModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditAddressModal\");\n$RefreshReg$(_c2, \"AddressComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/components/EditAddressModal.js"],"names":["React","styled","ArrowBackIosIcon","CloseIcon","useDispatch","useSelector","axios","TextField","Button","EditAddressModal","editModal","setEditModal","addressData","setAddressData","editModalHandler","addressId","appLink","dispatch","user","state","editAddressHandler","name","surname","phone","length","houseNr","street","city","postalCode","alert","display","addressInputs","map","input","label","type","e","handleForm","required","AddressComponent","div"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//icons\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n//redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//axios\r\nimport axios from \"axios\";\r\n//material ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//components\r\nimport Button from \"../components/Button\";\r\n\r\nconst EditAddressModal = ({\r\n  editModal,\r\n  setEditModal,\r\n  addressData,\r\n  setAddressData,\r\n\r\n  editModalHandler,\r\n  addressId,\r\n  appLink,\r\n}) => {\r\n  //state\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.user);\r\n  //handlers\r\n  //this handler checks if inputs are empty if they aren't it searches users addresses to match passed to function id, then it edits this found address\r\n  const editAddressHandler = (addressId) => {\r\n    if (\r\n      name !== \"\" &&\r\n      surname !== \"\" &&\r\n      phone !== \"\" &&\r\n      phone.length === 9 &&\r\n      houseNr !== \"\" &&\r\n      street !== \"\" &&\r\n      city !== \"\" &&\r\n      postalCode !== \"\"\r\n    ) {\r\n    } else {\r\n      alert(\"inputs cant be empty\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddressComponent style={{ display: editModal ? \"block\" : \"none\" }}>\r\n      <div className=\"edit-address\">\r\n        <div className=\"header\">\r\n          <span onClick={() => editModalHandler()}>\r\n            {\" \"}\r\n            <ArrowBackIosIcon />\r\n            Go back\r\n          </span>\r\n          <CloseIcon\r\n            className=\"close-modal\"\r\n            onClick={() => setEditModal(!editModal)}\r\n          />\r\n        </div>\r\n        <div className=\"inputs\">\r\n          {addressInputs.map((input) => (\r\n            <Input\r\n              key={input.label}\r\n              label={input.label}\r\n              name={input.name}\r\n              value={addressData[input.name]}\r\n              type={input.type}\r\n              handleChange={(e) => handleForm(e, setAddressData, addressData)}\r\n              required={input.required}\r\n            />\r\n          ))}\r\n        </div>\r\n        <Button\r\n          variant={\"black\"}\r\n          label=\"Save\"\r\n          onClick={() => editAddressHandler(addressId)}\r\n        />\r\n      </div>\r\n    </AddressComponent>\r\n  );\r\n};\r\n\r\nconst AddressComponent = styled.div`\r\n  position: absolute;\r\n  z-index: 5;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  .edit-address {\r\n    background-color: white;\r\n    margin-left: 40%;\r\n    margin-top: 10%;\r\n    width: 25%;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0;\r\n    }\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      width: 100%;\r\n      padding: 1rem;\r\n      span {\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n    .inputs {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: 100%;\r\n      padding: 1rem;\r\n      .input {\r\n        width: 100%;\r\n      }\r\n      .two-inputs {\r\n        width: 100%;\r\n        display: flex;\r\n      }\r\n      .postal {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditAddressModal;\r\n"]},"metadata":{},"sourceType":"module"}