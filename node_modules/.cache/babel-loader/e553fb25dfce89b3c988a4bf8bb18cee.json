{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\pages\\\\AccountPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //react router\n\nimport { useLocation } from \"react-router\";\nimport { Link, useHistory } from \"react-router-dom\"; //redux\n\nimport { useDispatch, useSelector } from \"react-redux\"; //actions\n\nimport { loadUsersOrders } from \"../actions/ordersAction\"; //styling\n\nimport styled from \"styled-components\"; //material ui\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\"; //icons\n\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\nimport HomeIcon from \"@material-ui/icons/Home\"; //axios\n\nimport axios from \"axios\"; //encrypting password\n\nimport sha512 from \"crypto-js/sha512\";\nimport Base64 from \"crypto-js/enc-base64\"; //components\n\nimport Order from \"../components/Order\";\n\nconst AccountPage = () => {\n  _s();\n\n  const [deleteInfo, setDeleteInfo] = useState(false); //users State\n\n  const [usersName, setUsersName] = useState(\"\");\n  const [usersAddressName, setUsersAddressName] = useState(\"\");\n  const [usersAddressSurname, setUsersAddressSurname] = useState(\"\");\n  const [usersSurname, setUsersSurname] = useState(\"\");\n  const [usersEmail, setUsersEmail] = useState(\"\");\n  const [usersPhone, setUsersPhone] = useState(\"\");\n  const [usersStreet, setUsersStreet] = useState(\"\");\n  const [usersHouseNr, setUsersHouseNr] = useState(\"\");\n  const [usersCity, setUsersCity] = useState(\"\");\n  const [usersPostalCode, setUsersPostalCode] = useState(\"\");\n  const [addressMsg, setAddressMsg] = useState(\"\");\n  const [newAddressCheckbox, setNewAddressCheckbox] = useState(false);\n  const [addressId, setAddressId] = useState(1);\n  const [order, setOrder] = useState([]); //account state\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState(\"\");\n  const [accountErrorMsg, setAccountErrorMsg] = useState(\"\"); //use\n\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch(); //pathName\n\n  const pathName = location.pathname.split(\"/\")[3];\n  const orderDetails = location.pathname.split(\"/\")[4];\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const {\n    isLogged\n  } = useSelector(state => state.login);\n  const [action, setAction] = useState(\"change\");\n  const appLink = `https://benzen-server.herokuapp.com`;\n  useEffect(() => {\n    if (isLogged && user) {\n      dispatch(loadUsersOrders(user.id));\n    }\n  }, [dispatch, isLogged, user]);\n  const {\n    userOrders\n  } = useSelector(state => state.orders); //handlers\n  //changes name, surname, email for user\n\n  const userAccountHandler = () => {\n    if (usersName !== \"\" && usersSurname !== \"\" && usersEmail !== \"\" && usersEmail.includes(\"@\")) {\n      axios.put(`${appLink}/users/${user.id}/`, {\n        name: usersName,\n        surname: usersSurname,\n        email: usersEmail,\n        password: user.password,\n        favorites: user.favorites,\n        addresses: user.addresses,\n        accessibility: user.accessibility\n      }).then(resp => {\n        setPasswordErrorMsg(\"success\");\n      }).catch(error => {});\n    } else {\n      setAccountErrorMsg(\"Inputs cant be empty\");\n    }\n  }; //checks if inputs are empty, then it checks if password coded to sha512 matches user password then it checks if newPassword input matches  if so it changes user's password\n\n\n  const passwordChangeHandler = () => {\n    if (oldPassword !== \"\" && newPassword !== \"\" && confirmNewPassword !== \"\") {\n      if (sha512(oldPassword).toString(Base64) === user.password) {\n        if (newPassword === confirmNewPassword) {\n          axios.put(`${appLink}/users/${user.id}/`, {\n            name: user.name,\n            surname: user.surname,\n            email: user.email,\n            password: sha512(newPassword).toString(Base64),\n            favorites: user.favorites,\n            addresses: user.addresses,\n            accessibility: user.accessibility\n          }).then(resp => {\n            setPasswordErrorMsg(\"Password changed successfully\");\n          }).catch(error => {});\n        } else {\n          setPasswordErrorMsg(\"passwords don't match\");\n        }\n      } else {\n        setPasswordErrorMsg(\"wrong password\");\n      }\n    } else {\n      setPasswordErrorMsg(\"Inputs cant be empty\");\n    }\n  };\n\n  const deleteAccountHandler = () => {\n    axios.delete(`${appLink}/users/${user.id}/`).then(resp => {\n      LogOutHandler();\n    }).catch(error => {});\n  }; //sets inputs value to users data\n\n\n  useEffect(() => {\n    if (isLogged) {\n      setUsersName(user.name);\n      setUsersSurname(user.surname);\n      setUsersAddressName(user.name);\n      setUsersAddressSurname(user.surname);\n      setUsersEmail(user.email);\n\n      if (user.addresses[0]) {\n        setUsersPhone(user.addresses[0].phone);\n        setUsersHouseNr(user.addresses[0].houseNr);\n        setUsersStreet(user.addresses[0].street);\n        setUsersCity(user.addresses[0].city);\n        setUsersPostalCode(user.addresses[0].postalCode);\n      }\n    }\n  }, [user, isLogged]); //edits address\n\n  const addressHandler = () => {\n    if (usersAddressName !== \"\" && usersAddressSurname !== \"\" && usersPhone !== \"\" && usersPhone.length === 9 && usersHouseNr !== \"\" && usersStreet !== \"\" && usersCity !== \"\" && usersPostalCode !== \"\") {\n      const newAddress = user.addresses.map(location => location.id === addressId ? location = {\n        name: usersAddressName,\n        surname: usersAddressSurname,\n        phone: usersPhone,\n        houseNr: usersHouseNr,\n        street: usersStreet,\n        city: usersCity,\n        postalCode: usersPostalCode,\n        id: addressId\n      } : location);\n      axios.put(`${appLink}/users/${user.id}/`, {\n        name: user.name,\n        surname: user.surname,\n        email: user.email,\n        password: user.password,\n        favorites: user.favorites,\n        addresses: newAddress,\n        accessibility: user.accessibility\n      }).then(resp => {\n        alert(\"address changed succesfully\");\n      }).catch(error => {});\n    } else {\n      setAddressMsg(\"Inputs cant be empty\");\n    }\n  }; //adds address\n\n\n  const newAddressHandler = () => {\n    setNewAddressCheckbox(true);\n    setAddressId(0);\n    setAction(\"add\");\n    setUsersAddressName(\"\");\n    setUsersAddressSurname(\"\");\n    setUsersEmail(\"\");\n    setUsersPhone(\"\");\n    setUsersHouseNr(\"\");\n    setUsersStreet(\"\");\n    setUsersCity(\"\");\n    setUsersPostalCode(\"\");\n  };\n\n  useEffect(() => {\n    if (isLogged && user) {\n      if (user.addresses.length === 0) {\n        newAddressHandler();\n      }\n    }\n  }, [user, isLogged]);\n\n  const addAddress = () => {\n    if (usersAddressName !== \"\" && usersAddressSurname !== \"\" && usersPhone !== \"\" && usersPhone.length === 9 && usersHouseNr !== \"\" && usersStreet !== \"\" && usersCity !== \"\" && usersPostalCode !== \"\") {\n      axios.put(`https://benzen-server.herokuapp.com/users/${user.id}/`, {\n        name: user.name,\n        surname: user.surname,\n        email: user.email,\n        password: user.password,\n        favorites: user.favorites,\n        accessibility: user.accessibility,\n        addresses: [...user.addresses, {\n          name: usersAddressName,\n          surname: usersAddressSurname,\n          phone: usersPhone,\n          houseNr: usersHouseNr,\n          street: usersStreet,\n          city: usersCity,\n          postalCode: usersPostalCode,\n          id: user.addresses.length !== 0 ? user.addresses.length + 1 : 1\n        }]\n      }).then(resp => {\n        alert(\"Address added successfully\");\n      }).catch(error => {});\n    } else {\n      alert(\"inputs cant be empty\");\n    }\n  };\n\n  const checkboxHandler = e => {\n    setNewAddressCheckbox(e.target.checked);\n\n    if (newAddressCheckbox === false) {\n      newAddressHandler();\n    }\n  };\n\n  const LogOutHandler = () => {\n    localStorage.removeItem(\"userId\");\n    history.push(\"/customer/account/login\");\n  }; //deletes address\n\n\n  const deleteAddressHandler = id => {\n    axios.put(`${appLink}/users/${user.id}/`, {\n      name: user.name,\n      surname: user.surname,\n      email: user.email,\n      password: user.password,\n      favorites: user.favorites,\n      addresses: user.addresses.filter(info => info.id !== id),\n      orders: user.orders,\n      accessibility: user.accessibility\n    }).then(resp => {\n      alert(\"Address deleted successfully\");\n    }).catch(error => {});\n  };\n\n  const chooseAddressHandler = (name, surname, city, phone, houseNr, street, postalCode, id) => {\n    setUsersAddressName(name);\n    setUsersAddressSurname(surname);\n    setUsersCity(city);\n    setUsersPhone(phone);\n    setUsersHouseNr(houseNr);\n    setUsersStreet(street);\n    setUsersPostalCode(postalCode);\n    setAction(\"change\");\n    setAddressId(id);\n    setNewAddressCheckbox(false);\n  };\n\n  const orderDetailsHandler = (id, order) => {\n    history.push(`/customer/account/orders/${id}`);\n    setOrder(order);\n    window.scrollTo(0, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLogged && /*#__PURE__*/_jsxDEV(LoggedInComponent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/customer/account/orders\",\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: pathName === \"orders\" ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(ShoppingBasketIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), \" Orders\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/customer/account/address\",\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: pathName === \"address\" ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), \" Address data\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/customer/account/info\",\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: pathName === \"info\" ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(AccountBoxIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), \" Account info\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"log-out\",\n            onClick: () => LogOutHandler(),\n            children: [/*#__PURE__*/_jsxDEV(MeetingRoomIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), \" Log out\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-side\",\n        children: [pathName === \"info\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoComponent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"My account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: accountErrorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                value: usersName,\n                className: \"input\",\n                required: true,\n                onChange: e => setUsersName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Surname\",\n                value: usersSurname,\n                required: true,\n                className: \"input\",\n                onChange: e => setUsersSurname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email\",\n                type: \"email\",\n                required: true,\n                value: usersEmail,\n                className: \"input\",\n                onChange: e => setUsersEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => userAccountHandler(),\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-change\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Password change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: passwordErrorMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Your Password\",\n                type: \"password\",\n                value: oldPassword,\n                required: true,\n                className: \"input\",\n                onChange: e => setOldPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"New password\",\n                type: \"password\",\n                value: newPassword,\n                required: true,\n                className: \"input\",\n                onChange: e => setNewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Confirm password\",\n                type: \"email\",\n                value: confirmNewPassword,\n                required: true,\n                className: \"input\",\n                onChange: e => setConfirmNewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => passwordChangeHandler(),\n                children: \"Change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete-acc\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setDeleteInfo(true),\n                children: \"Delete account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: deleteInfo ? \"block\" : \"none\"\n                },\n                className: \"delete-confirmation\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Are you sure you want to delete account?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteAccountHandler(),\n                    children: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setDeleteInfo(false),\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }, this), pathName === \"orders\" && !orderDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders\",\n          children: userOrders.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n              \"aria-label\": \"breadcrumb\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"My account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/customer/account/orders\",\n                className: \"link\",\n                children: \"My orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 23\n            }, this), userOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"order-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"price-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Nr:\", order.id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [(order.cartPrice + order.deliveryPrice).toFixed(2), \" \", \"GBP\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"items-image\",\n                  children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.images[0].img,\n                    alt: item.name,\n                    onClick: () => orderDetailsHandler(order.id, order)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 33\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"order-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [order.date, \" \", order.time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: order.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"details-button\",\n                    onClick: () => orderDetailsHandler(order.id, order),\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 27\n              }, this)]\n            }, order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-orders\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"You didnt order anything\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Go and explore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/woman\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Women\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/man\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Men\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 17\n        }, this), orderDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"specific-order\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            \"aria-label\": \"breadcrumb\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"My account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/customer/account/orders\",\n              className: \"link\",\n              children: \"My orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: order.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 17\n        }, this), pathName === \"address\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addressComponent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Addresses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choose-address\",\n            children: [user.addresses.map((info, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: index + 1 === addressId ? \"single-address active-address\" : \"single-address\",\n              onClick: () => chooseAddressHandler(info.name, info.surname, info.city, info.phone, info.houseNr, info.street, info.postalCode, info.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [info.name, \" \", info.surname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [info.street, \" \", info.houseNr]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [info.postalCode, \" \", info.city]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" Tel. \", info.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  onClick: () => deleteAddressHandler(info.id),\n                  children: \"Delete address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 25\n              }, this)]\n            }, info.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 23\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: newAddressCheckbox,\n                onChange: checkboxHandler,\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: \"0.8rem\",\n                  padding: \"1rem 0\"\n                },\n                onClick: () => newAddressHandler(),\n                children: \"Add new address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: addressMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"two-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"name\",\n              value: usersAddressName,\n              required: true,\n              className: \"input\",\n              onChange: e => setUsersAddressName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"surname\",\n              value: usersAddressSurname,\n              required: true,\n              className: \"input\",\n              onChange: e => setUsersAddressSurname(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"phone\",\n            value: usersPhone,\n            type: \"tel\",\n            required: true,\n            className: \"phone-input\",\n            onChange: e => setUsersPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"two-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"street\",\n              value: usersStreet,\n              required: true,\n              className: \"input\",\n              onChange: e => setUsersStreet(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"house nr\",\n              value: usersHouseNr,\n              required: true,\n              className: \"input\",\n              onChange: e => setUsersHouseNr(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"two-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"city\",\n              value: usersCity,\n              required: true,\n              className: \"input\",\n              onChange: e => setUsersCity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"postal-code\",\n              value: usersPostalCode,\n              required: true,\n              className: \"input\",\n              onChange: e => setUsersPostalCode(e.target.value),\n              onKeyDown: e => e.key === \"Enter\" ? addressHandler() : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-white\",\n            style: {\n              display: action === \"add\" ? \"flex\" : \"none\"\n            },\n            onClick: () => addAddress(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-white\",\n            style: {\n              display: action === \"change\" ? \"flex\" : \"none\"\n            },\n            onClick: () => addressHandler(),\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountPage, \"PYUcrqI0XGHVLAs+faWbZiQoxuc=\", false, function () {\n  return [useLocation, useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = AccountPage;\nconst LoggedInComponent = styled.div`\n  display: flex;\n  margin-top: 2rem;\n  min-height: 70vh;\n  @media screen and (max-width: 1000px) {\n    flex-direction: column;\n  }\n  .left-side {\n    width: 20%;\n    display: flex;\n    align-items: flex-end;\n    flex-direction: column;\n    font-size: 1.5rem;\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      align-items: flex-start;\n      margin: 0rem 0.5rem;\n    }\n    .active {\n      font-weight: bold;\n    }\n    ul {\n      list-style: none;\n      li {\n        &:hover {\n          color: rgba(0, 0, 0, 0.6);\n        }\n      }\n      .log-out {\n        &:hover {\n          cursor: pointer;\n          color: #e0431c;\n        }\n      }\n    }\n  }\n  .right-side {\n    width: 60%;\n    justify-content: center;\n    align-items: Center;\n\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      margin: 0rem 0.5rem;\n    }\n    .infoComponent {\n      display: flex;\n      flex-direction: column;\n      margin-left: 2rem;\n      @media screen and (max-width: 1000px) {\n        margin: 0rem;\n      }\n      .info {\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        button {\n          margin: 1rem 0rem;\n        }\n        .input {\n          width: 15rem;\n        }\n        .password-change {\n          display: flex;\n          flex-direction: column;\n          button {\n            margin: 1rem 0rem;\n          }\n        }\n        button {\n          width: fit-content;\n          background-color: black;\n          color: White;\n          border: 1px solid black;\n          font-size: 1.5rem;\n          &:hover {\n            background-color: white;\n            color: black;\n          }\n        }\n        .delete-acc {\n          .delete-confirmation {\n            display: flex;\n            flex-direction: column;\n            margin: 1rem 0rem;\n            .buttons {\n              button {\n                margin: 0.5rem 1rem;\n              }\n            }\n          }\n        }\n      }\n    }\n    .addressComponent {\n      display: flex;\n      flex-direction: column;\n      margin-left: 2rem;\n      @media screen and (max-width: 1000px) {\n        margin: 0;\n      }\n      .choose-address {\n        display: flex;\n        align-items: start;\n        .active-address {\n          .checkbox {\n            background-color: black;\n          }\n        }\n        .single-address {\n          display: flex;\n          font-size: 0.8rem;\n          &:hover {\n            cursor: pointer;\n          }\n          .checkbox {\n            border: 1px solid rgba(0, 0, 0, 0.2);\n            width: 1rem;\n            height: 1rem;\n            margin: 0 1rem;\n            @media screen and (max-width: 1000px) {\n              width: 1rem;\n              height: 1rem;\n              border-radius: 1rem;\n              margin: 0 0.5rem;\n            }\n          }\n          .address-info {\n            display: flex;\n            flex-direction: column;\n            p {\n              margin: 5px 0;\n              font-weight: bold;\n              &:hover {\n                cursor: pointer;\n              }\n            }\n          }\n        }\n      }\n      .two-inputs {\n        display: flex;\n        justify-content: space-between;\n        .input {\n          width: 100%;\n          margin-right: 10px;\n        }\n      }\n      .button-white {\n        @media screen and (max-width: 1000px) {\n          display: flex;\n          text-transform: upperCase;\n          justify-content: center;\n          width: 100%;\n          background-color: black;\n          margin: 1rem 0;\n          padding: 0;\n          font-size: 1.5rem;\n          color: White;\n        }\n      }\n    }\n    .line {\n      width: 100%;\n      height: 1px;\n      background-color: black;\n      margin: 2rem 0rem;\n      @media screen and (max-width: 1000px) {\n        margin: 1rem 0;\n        width: 90%;\n      }\n    }\n    .no-orders {\n      display: flex;\n      flex-direction: column;\n      text-align: center;\n      .buttons {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        button {\n          font-size: 1.5rem;\n          width: 8rem;\n          background-color: black;\n          color: White;\n          margin: 1rem;\n          &:hover {\n            background-color: rgba(0, 0, 0, 0.8);\n          }\n        }\n      }\n    }\n    font-size: 2rem;\n    .orders {\n      margin-left: 2rem;\n      @media screen and (max-width: 1000px) {\n        margin-left: 0;\n      }\n      .order {\n        display: flex;\n        justify-content: space-between;\n        font-size: 1.5rem;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n        padding: 1rem;\n\n        .order-left {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          .price-info {\n            display: flex;\n            flex-direction: column;\n            font-size: 1rem;\n          }\n          .items-image {\n            display: flex;\n            flex-wrap: wrap;\n            img {\n              margin: 0.5rem 0.5rem 0.5rem 0;\n              height: 10rem;\n              width: 8rem;\n            }\n          }\n        }\n        .order-right {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          .time-info {\n            display: flex;\n            flex-direction: column;\n            font-size: 1rem;\n            span {\n              align-self: flex-end;\n            }\n          }\n          .details {\n            align-self: flex-end;\n            span {\n              padding: 0.6rem;\n              font-size: 1rem;\n              font-weight: bold;\n              text-transform: upperCase;\n              &:hover {\n                background-color: rgba(0, 0, 0, 0.2);\n                cursor: pointer;\n              }\n            }\n          }\n        }\n      }\n    }\n    .specific-order {\n      margin-left: 2rem;\n      display: flex;\n      flex-direction: column;\n      font-size: 1.5rem;\n      @media screen and (max-width: 1000px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n_c2 = LoggedInComponent;\nexport default AccountPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccountPage\");\n$RefreshReg$(_c2, \"LoggedInComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/pages/AccountPage.js"],"names":["React","useState","useEffect","useLocation","Link","useHistory","useDispatch","useSelector","loadUsersOrders","styled","TextField","Checkbox","Breadcrumbs","ShoppingBasketIcon","AccountBoxIcon","MeetingRoomIcon","HomeIcon","axios","sha512","Base64","Order","AccountPage","deleteInfo","setDeleteInfo","usersName","setUsersName","usersAddressName","setUsersAddressName","usersAddressSurname","setUsersAddressSurname","usersSurname","setUsersSurname","usersEmail","setUsersEmail","usersPhone","setUsersPhone","usersStreet","setUsersStreet","usersHouseNr","setUsersHouseNr","usersCity","setUsersCity","usersPostalCode","setUsersPostalCode","addressMsg","setAddressMsg","newAddressCheckbox","setNewAddressCheckbox","addressId","setAddressId","order","setOrder","newPassword","setNewPassword","oldPassword","setOldPassword","confirmNewPassword","setConfirmNewPassword","passwordErrorMsg","setPasswordErrorMsg","accountErrorMsg","setAccountErrorMsg","location","history","dispatch","pathName","pathname","split","orderDetails","user","JSON","parse","localStorage","getItem","isLogged","state","login","action","setAction","appLink","id","userOrders","orders","userAccountHandler","includes","put","name","surname","email","password","favorites","addresses","accessibility","then","resp","catch","error","passwordChangeHandler","toString","deleteAccountHandler","delete","LogOutHandler","phone","houseNr","street","city","postalCode","addressHandler","length","newAddress","map","alert","newAddressHandler","addAddress","checkboxHandler","e","target","checked","removeItem","push","deleteAddressHandler","filter","info","chooseAddressHandler","orderDetailsHandler","window","scrollTo","value","display","cartPrice","deliveryPrice","toFixed","items","item","images","img","date","time","status","index","fontSize","padding","key","LoggedInComponent","div"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,eAAT,QAAgC,yBAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C,CADwB,CAExB;;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACyB,gBAAD,EAAmBC,mBAAnB,IAA0C1B,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAC2B,mBAAD,EAAsBC,sBAAtB,IAAgD5B,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC+B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiC,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmC,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqC,YAAD,EAAeC,eAAf,IAAkCtC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACuC,SAAD,EAAYC,YAAZ,IAA4BxC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACyC,eAAD,EAAkBC,kBAAlB,IAAwC1C,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC2C,UAAD,EAAaC,aAAb,IAA8B5C,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC6C,kBAAD,EAAqBC,qBAArB,IAA8C9C,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAAC+C,SAAD,EAAYC,YAAZ,IAA4BhD,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACiD,KAAD,EAAQC,QAAR,IAAoBlD,QAAQ,CAAC,EAAD,CAAlC,CAhBwB,CAiBxB;;AACA,QAAM,CAACmD,WAAD,EAAcC,cAAd,IAAgCpD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqD,WAAD,EAAcC,cAAd,IAAgCtD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACuD,kBAAD,EAAqBC,qBAArB,IAA8CxD,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACyD,gBAAD,EAAmBC,mBAAnB,IAA0C1D,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAC2D,eAAD,EAAkBC,kBAAlB,IAAwC5D,QAAQ,CAAC,EAAD,CAAtD,CAtBwB,CAuBxB;;AACA,QAAM6D,QAAQ,GAAG3D,WAAW,EAA5B;AACA,QAAM4D,OAAO,GAAG1D,UAAU,EAA1B;AACA,QAAM2D,QAAQ,GAAG1D,WAAW,EAA5B,CA1BwB,CA2BxB;;AACA,QAAM2D,QAAQ,GAAGH,QAAQ,CAACI,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAjB;AACA,QAAMC,YAAY,GAAGN,QAAQ,CAACI,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAArB;AACA,QAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAenE,WAAW,CAAEoE,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB7E,QAAQ,CAAC,QAAD,CAApC;AACA,QAAM8E,OAAO,GAAI,qCAAjB;AAEA7E,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwE,QAAQ,IAAIL,IAAhB,EAAsB;AACpBL,MAAAA,QAAQ,CAACxD,eAAe,CAAC6D,IAAI,CAACW,EAAN,CAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAAChB,QAAD,EAAWU,QAAX,EAAqBL,IAArB,CAJM,CAAT;AAKA,QAAM;AAAEY,IAAAA;AAAF,MAAiB1E,WAAW,CAAEoE,KAAD,IAAWA,KAAK,CAACO,MAAlB,CAAlC,CAxCwB,CAyCxB;AACA;;AACA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QACE3D,SAAS,KAAK,EAAd,IACAM,YAAY,KAAK,EADjB,IAEAE,UAAU,KAAK,EAFf,IAGAA,UAAU,CAACoD,QAAX,CAAoB,GAApB,CAJF,EAKE;AACAnE,MAAAA,KAAK,CACFoE,GADH,CACQ,GAAEN,OAAQ,UAASV,IAAI,CAACW,EAAG,GADnC,EACuC;AACnCM,QAAAA,IAAI,EAAE9D,SAD6B;AAEnC+D,QAAAA,OAAO,EAAEzD,YAF0B;AAGnC0D,QAAAA,KAAK,EAAExD,UAH4B;AAInCyD,QAAAA,QAAQ,EAAEpB,IAAI,CAACoB,QAJoB;AAKnCC,QAAAA,SAAS,EAAErB,IAAI,CAACqB,SALmB;AAMnCC,QAAAA,SAAS,EAAEtB,IAAI,CAACsB,SANmB;AAOnCC,QAAAA,aAAa,EAAEvB,IAAI,CAACuB;AAPe,OADvC,EAUGC,IAVH,CAUSC,IAAD,IAAU;AACdnC,QAAAA,mBAAmB,CAAC,SAAD,CAAnB;AACD,OAZH,EAaGoC,KAbH,CAaUC,KAAD,IAAW,CAAE,CAbtB;AAcD,KApBD,MAoBO;AACLnC,MAAAA,kBAAkB,CAAC,sBAAD,CAAlB;AACD;AACF,GAxBD,CA3CwB,CAoExB;;;AACA,QAAMoC,qBAAqB,GAAG,MAAM;AAClC,QAAI3C,WAAW,KAAK,EAAhB,IAAsBF,WAAW,KAAK,EAAtC,IAA4CI,kBAAkB,KAAK,EAAvE,EAA2E;AACzE,UAAItC,MAAM,CAACoC,WAAD,CAAN,CAAoB4C,QAApB,CAA6B/E,MAA7B,MAAyCkD,IAAI,CAACoB,QAAlD,EAA4D;AAC1D,YAAIrC,WAAW,KAAKI,kBAApB,EAAwC;AACtCvC,UAAAA,KAAK,CACFoE,GADH,CACQ,GAAEN,OAAQ,UAASV,IAAI,CAACW,EAAG,GADnC,EACuC;AACnCM,YAAAA,IAAI,EAAEjB,IAAI,CAACiB,IADwB;AAEnCC,YAAAA,OAAO,EAAElB,IAAI,CAACkB,OAFqB;AAGnCC,YAAAA,KAAK,EAAEnB,IAAI,CAACmB,KAHuB;AAInCC,YAAAA,QAAQ,EAAEvE,MAAM,CAACkC,WAAD,CAAN,CAAoB8C,QAApB,CAA6B/E,MAA7B,CAJyB;AAKnCuE,YAAAA,SAAS,EAAErB,IAAI,CAACqB,SALmB;AAMnCC,YAAAA,SAAS,EAAEtB,IAAI,CAACsB,SANmB;AAOnCC,YAAAA,aAAa,EAAEvB,IAAI,CAACuB;AAPe,WADvC,EAUGC,IAVH,CAUSC,IAAD,IAAU;AACdnC,YAAAA,mBAAmB,CAAC,+BAAD,CAAnB;AACD,WAZH,EAaGoC,KAbH,CAaUC,KAAD,IAAW,CAAE,CAbtB;AAcD,SAfD,MAeO;AACLrC,UAAAA,mBAAmB,CAAC,uBAAD,CAAnB;AACD;AACF,OAnBD,MAmBO;AACLA,QAAAA,mBAAmB,CAAC,gBAAD,CAAnB;AACD;AACF,KAvBD,MAuBO;AACLA,MAAAA,mBAAmB,CAAC,sBAAD,CAAnB;AACD;AACF,GA3BD;;AA4BA,QAAMwC,oBAAoB,GAAG,MAAM;AACjClF,IAAAA,KAAK,CACFmF,MADH,CACW,GAAErB,OAAQ,UAASV,IAAI,CAACW,EAAG,GADtC,EAEGa,IAFH,CAESC,IAAD,IAAU;AACdO,MAAAA,aAAa;AACd,KAJH,EAKGN,KALH,CAKUC,KAAD,IAAW,CAAE,CALtB;AAMD,GAPD,CAjGwB,CAyGxB;;;AACA9F,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwE,QAAJ,EAAc;AACZjD,MAAAA,YAAY,CAAC4C,IAAI,CAACiB,IAAN,CAAZ;AACAvD,MAAAA,eAAe,CAACsC,IAAI,CAACkB,OAAN,CAAf;AACA5D,MAAAA,mBAAmB,CAAC0C,IAAI,CAACiB,IAAN,CAAnB;AACAzD,MAAAA,sBAAsB,CAACwC,IAAI,CAACkB,OAAN,CAAtB;AACAtD,MAAAA,aAAa,CAACoC,IAAI,CAACmB,KAAN,CAAb;;AAEA,UAAInB,IAAI,CAACsB,SAAL,CAAe,CAAf,CAAJ,EAAuB;AACrBxD,QAAAA,aAAa,CAACkC,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBW,KAAnB,CAAb;AACA/D,QAAAA,eAAe,CAAC8B,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBY,OAAnB,CAAf;AACAlE,QAAAA,cAAc,CAACgC,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBa,MAAnB,CAAd;AACA/D,QAAAA,YAAY,CAAC4B,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBc,IAAnB,CAAZ;AACA9D,QAAAA,kBAAkB,CAAC0B,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBe,UAAnB,CAAlB;AACD;AACF;AACF,GAhBQ,EAgBN,CAACrC,IAAD,EAAOK,QAAP,CAhBM,CAAT,CA1GwB,CA4HxB;;AACA,QAAMiC,cAAc,GAAG,MAAM;AAC3B,QACEjF,gBAAgB,KAAK,EAArB,IACAE,mBAAmB,KAAK,EADxB,IAEAM,UAAU,KAAK,EAFf,IAGAA,UAAU,CAAC0E,MAAX,KAAsB,CAHtB,IAIAtE,YAAY,KAAK,EAJjB,IAKAF,WAAW,KAAK,EALhB,IAMAI,SAAS,KAAK,EANd,IAOAE,eAAe,KAAK,EARtB,EASE;AACA,YAAMmE,UAAU,GAAGxC,IAAI,CAACsB,SAAL,CAAemB,GAAf,CAAoBhD,QAAD,IACpCA,QAAQ,CAACkB,EAAT,KAAgBhC,SAAhB,GACKc,QAAQ,GAAG;AACVwB,QAAAA,IAAI,EAAE5D,gBADI;AAEV6D,QAAAA,OAAO,EAAE3D,mBAFC;AAGV0E,QAAAA,KAAK,EAAEpE,UAHG;AAIVqE,QAAAA,OAAO,EAAEjE,YAJC;AAKVkE,QAAAA,MAAM,EAAEpE,WALE;AAMVqE,QAAAA,IAAI,EAAEjE,SANI;AAOVkE,QAAAA,UAAU,EAAEhE,eAPF;AAQVsC,QAAAA,EAAE,EAAEhC;AARM,OADhB,GAWIc,QAZa,CAAnB;AAcA7C,MAAAA,KAAK,CACFoE,GADH,CACQ,GAAEN,OAAQ,UAASV,IAAI,CAACW,EAAG,GADnC,EACuC;AACnCM,QAAAA,IAAI,EAAEjB,IAAI,CAACiB,IADwB;AAEnCC,QAAAA,OAAO,EAAElB,IAAI,CAACkB,OAFqB;AAGnCC,QAAAA,KAAK,EAAEnB,IAAI,CAACmB,KAHuB;AAInCC,QAAAA,QAAQ,EAAEpB,IAAI,CAACoB,QAJoB;AAKnCC,QAAAA,SAAS,EAAErB,IAAI,CAACqB,SALmB;AAMnCC,QAAAA,SAAS,EAAEkB,UANwB;AAOnCjB,QAAAA,aAAa,EAAEvB,IAAI,CAACuB;AAPe,OADvC,EAUGC,IAVH,CAUSC,IAAD,IAAU;AACdiB,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,OAZH,EAaGhB,KAbH,CAaUC,KAAD,IAAW,CAAE,CAbtB;AAcD,KAtCD,MAsCO;AACLnD,MAAAA,aAAa,CAAC,sBAAD,CAAb;AACD;AACF,GA1CD,CA7HwB,CAwKxB;;;AACA,QAAMmE,iBAAiB,GAAG,MAAM;AAC9BjE,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAE,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACA6B,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAnD,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAE,IAAAA,sBAAsB,CAAC,EAAD,CAAtB;AACAI,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAI,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAI,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,GAZD;;AAaAzC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwE,QAAQ,IAAIL,IAAhB,EAAsB;AACpB,UAAIA,IAAI,CAACsB,SAAL,CAAeiB,MAAf,KAA0B,CAA9B,EAAiC;AAC/BI,QAAAA,iBAAiB;AAClB;AACF;AACF,GANQ,EAMN,CAAC3C,IAAD,EAAOK,QAAP,CANM,CAAT;;AAOA,QAAMuC,UAAU,GAAG,MAAM;AACvB,QACEvF,gBAAgB,KAAK,EAArB,IACAE,mBAAmB,KAAK,EADxB,IAEAM,UAAU,KAAK,EAFf,IAGAA,UAAU,CAAC0E,MAAX,KAAsB,CAHtB,IAIAtE,YAAY,KAAK,EAJjB,IAKAF,WAAW,KAAK,EALhB,IAMAI,SAAS,KAAK,EANd,IAOAE,eAAe,KAAK,EARtB,EASE;AACAzB,MAAAA,KAAK,CACFoE,GADH,CACQ,6CAA4ChB,IAAI,CAACW,EAAG,GAD5D,EACgE;AAC5DM,QAAAA,IAAI,EAAEjB,IAAI,CAACiB,IADiD;AAE5DC,QAAAA,OAAO,EAAElB,IAAI,CAACkB,OAF8C;AAG5DC,QAAAA,KAAK,EAAEnB,IAAI,CAACmB,KAHgD;AAI5DC,QAAAA,QAAQ,EAAEpB,IAAI,CAACoB,QAJ6C;AAK5DC,QAAAA,SAAS,EAAErB,IAAI,CAACqB,SAL4C;AAM5DE,QAAAA,aAAa,EAAEvB,IAAI,CAACuB,aANwC;AAO5DD,QAAAA,SAAS,EAAE,CACT,GAAGtB,IAAI,CAACsB,SADC,EAET;AACEL,UAAAA,IAAI,EAAE5D,gBADR;AAEE6D,UAAAA,OAAO,EAAE3D,mBAFX;AAGE0E,UAAAA,KAAK,EAAEpE,UAHT;AAIEqE,UAAAA,OAAO,EAAEjE,YAJX;AAKEkE,UAAAA,MAAM,EAAEpE,WALV;AAMEqE,UAAAA,IAAI,EAAEjE,SANR;AAOEkE,UAAAA,UAAU,EAAEhE,eAPd;AAQEsC,UAAAA,EAAE,EAAEX,IAAI,CAACsB,SAAL,CAAeiB,MAAf,KAA0B,CAA1B,GAA8BvC,IAAI,CAACsB,SAAL,CAAeiB,MAAf,GAAwB,CAAtD,GAA0D;AARhE,SAFS;AAPiD,OADhE,EAsBGf,IAtBH,CAsBSC,IAAD,IAAU;AACdiB,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD,OAxBH,EAyBGhB,KAzBH,CAyBUC,KAAD,IAAW,CAAE,CAzBtB;AA0BD,KApCD,MAoCO;AACLe,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,GAxCD;;AAyCA,QAAMG,eAAe,GAAIC,CAAD,IAAO;AAC7BpE,IAAAA,qBAAqB,CAACoE,CAAC,CAACC,MAAF,CAASC,OAAV,CAArB;;AACA,QAAIvE,kBAAkB,KAAK,KAA3B,EAAkC;AAChCkE,MAAAA,iBAAiB;AAClB;AACF,GALD;;AAMA,QAAMX,aAAa,GAAG,MAAM;AAC1B7B,IAAAA,YAAY,CAAC8C,UAAb,CAAwB,QAAxB;AACAvD,IAAAA,OAAO,CAACwD,IAAR,CAAa,yBAAb;AACD,GAHD,CA5OwB,CAgPxB;;;AACA,QAAMC,oBAAoB,GAAIxC,EAAD,IAAQ;AACnC/D,IAAAA,KAAK,CACFoE,GADH,CACQ,GAAEN,OAAQ,UAASV,IAAI,CAACW,EAAG,GADnC,EACuC;AACnCM,MAAAA,IAAI,EAAEjB,IAAI,CAACiB,IADwB;AAEnCC,MAAAA,OAAO,EAAElB,IAAI,CAACkB,OAFqB;AAGnCC,MAAAA,KAAK,EAAEnB,IAAI,CAACmB,KAHuB;AAInCC,MAAAA,QAAQ,EAAEpB,IAAI,CAACoB,QAJoB;AAKnCC,MAAAA,SAAS,EAAErB,IAAI,CAACqB,SALmB;AAMnCC,MAAAA,SAAS,EAAEtB,IAAI,CAACsB,SAAL,CAAe8B,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAAC1C,EAAL,KAAYA,EAA5C,CANwB;AAOnCE,MAAAA,MAAM,EAAEb,IAAI,CAACa,MAPsB;AAQnCU,MAAAA,aAAa,EAAEvB,IAAI,CAACuB;AARe,KADvC,EAWGC,IAXH,CAWSC,IAAD,IAAU;AACdiB,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,KAbH,EAcGhB,KAdH,CAcUC,KAAD,IAAW,CAAE,CAdtB;AAeD,GAhBD;;AAiBA,QAAM2B,oBAAoB,GAAG,CAC3BrC,IAD2B,EAE3BC,OAF2B,EAG3BkB,IAH2B,EAI3BH,KAJ2B,EAK3BC,OAL2B,EAM3BC,MAN2B,EAO3BE,UAP2B,EAQ3B1B,EAR2B,KASxB;AACHrD,IAAAA,mBAAmB,CAAC2D,IAAD,CAAnB;AACAzD,IAAAA,sBAAsB,CAAC0D,OAAD,CAAtB;AACA9C,IAAAA,YAAY,CAACgE,IAAD,CAAZ;AACAtE,IAAAA,aAAa,CAACmE,KAAD,CAAb;AACA/D,IAAAA,eAAe,CAACgE,OAAD,CAAf;AACAlE,IAAAA,cAAc,CAACmE,MAAD,CAAd;AACA7D,IAAAA,kBAAkB,CAAC+D,UAAD,CAAlB;AACA5B,IAAAA,SAAS,CAAC,QAAD,CAAT;AACA7B,IAAAA,YAAY,CAAC+B,EAAD,CAAZ;AACAjC,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GApBD;;AAqBA,QAAM6E,mBAAmB,GAAG,CAAC5C,EAAD,EAAK9B,KAAL,KAAe;AACzCa,IAAAA,OAAO,CAACwD,IAAR,CAAc,4BAA2BvC,EAAG,EAA5C;AACA7B,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA2E,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAJD;;AAKA,sBACE;AAAA,cACGpD,QAAQ,iBACP,QAAC,iBAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,0BAAT;AAAoC,YAAA,SAAS,EAAC,MAA9C;AAAA,mCACE;AAAI,cAAA,SAAS,EAAET,QAAQ,KAAK,QAAb,GAAwB,QAAxB,GAAmC,EAAlD;AAAA,sCACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,2BAAT;AAAqC,YAAA,SAAS,EAAC,MAA/C;AAAA,mCACE;AAAI,cAAA,SAAS,EAAEA,QAAQ,KAAK,SAAb,GAAyB,QAAzB,GAAoC,EAAnD;AAAA,sCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eAYE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,wBAAT;AAAkC,YAAA,SAAS,EAAC,MAA5C;AAAA,mCACE;AAAI,cAAA,SAAS,EAAEA,QAAQ,KAAK,MAAb,GAAsB,QAAtB,GAAiC,EAAhD;AAAA,sCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAiBE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAE,MAAMoC,aAAa,EAApD;AAAA,oCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAwBGhC,IAAI,iBACH;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,mBACGJ,QAAQ,KAAK,MAAb,iBACC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,oBAHF,eAKE;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,MADR;AAEE,gBAAA,KAAK,EAAEpC,SAFT;AAGE,gBAAA,SAAS,EAAC,OAHZ;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,QAAQ,EAAG2F,CAAD,IAAO1F,YAAY,CAAC0F,CAAC,CAACC,MAAF,CAASW,KAAV;AAL/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF,eAcE;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,SADR;AAEE,gBAAA,KAAK,EAAEjG,YAFT;AAGE,gBAAA,QAAQ,MAHV;AAIE,gBAAA,SAAS,EAAC,OAJZ;AAKE,gBAAA,QAAQ,EAAGqF,CAAD,IAAOpF,eAAe,CAACoF,CAAC,CAACC,MAAF,CAASW,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF,eAuBE;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,OADR;AAEE,gBAAA,IAAI,EAAC,OAFP;AAGE,gBAAA,QAAQ,MAHV;AAIE,gBAAA,KAAK,EAAE/F,UAJT;AAKE,gBAAA,SAAS,EAAC,OALZ;AAME,gBAAA,QAAQ,EAAGmF,CAAD,IAAOlF,aAAa,CAACkF,CAAC,CAACC,MAAF,CAASW,KAAV;AANhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAvBF,eAiCE;AAAQ,cAAA,OAAO,EAAE,MAAM5C,kBAAkB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjCF,eAoCE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBApCF,eAqCE;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAOzB;AAAP;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,eADR;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,KAAK,EAAEJ,WAHT;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,SAAS,EAAC,OALZ;AAME,gBAAA,QAAQ,EAAG6D,CAAD,IAAO5D,cAAc,CAAC4D,CAAC,CAACC,MAAF,CAASW,KAAV;AANjC;AAAA;AAAA;AAAA;AAAA,sBAHF,eAWE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,cADR;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,KAAK,EAAE3E,WAHT;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,SAAS,EAAC,OALZ;AAME,gBAAA,QAAQ,EAAG+D,CAAD,IAAO9D,cAAc,CAAC8D,CAAC,CAACC,MAAF,CAASW,KAAV;AANjC;AAAA;AAAA;AAAA;AAAA,sBAXF,eAmBE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,kBADR;AAEE,gBAAA,IAAI,EAAC,OAFP;AAGE,gBAAA,KAAK,EAAEvE,kBAHT;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,SAAS,EAAC,OALZ;AAME,gBAAA,QAAQ,EAAG2D,CAAD,IAAO1D,qBAAqB,CAAC0D,CAAC,CAACC,MAAF,CAASW,KAAV;AANxC;AAAA;AAAA;AAAA;AAAA,sBAnBF,eA2BE;AAAQ,gBAAA,OAAO,EAAE,MAAM9B,qBAAqB,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,oBArCF,eAoEE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBApEF,eAqEE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAM,gBAAA,OAAO,EAAE,MAAM1E,aAAa,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AACE,gBAAA,KAAK,EAAE;AAAEyG,kBAAAA,OAAO,EAAE1G,UAAU,GAAG,OAAH,GAAa;AAAlC,iBADT;AAEE,gBAAA,SAAS,EAAC,qBAFZ;AAAA,wCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAK,kBAAA,SAAS,EAAC,SAAf;AAAA,0CACE;AAAQ,oBAAA,OAAO,EAAE,MAAM6E,oBAAoB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAQ,oBAAA,OAAO,EAAE,MAAM5E,aAAa,CAAC,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBArEF,eAwFE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAxFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,EA+FG0C,QAAQ,KAAK,QAAb,IAAyB,CAACG,YAA1B,iBACC;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACGa,UAAU,CAAC2B,MAAX,GAAoB,CAApB,gBACC;AAAA,oCACE,QAAC,WAAD;AAAa,4BAAW,YAAxB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,0BAAT;AAAoC,gBAAA,SAAS,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAOG3B,UAAU,CAAC6B,GAAX,CAAgB5D,KAAD,iBACd;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AAAA,sCAAUA,KAAK,CAAC8B,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,2CACE;AAAA,iCACG,CACC9B,KAAK,CAAC+E,SAAN,GAAkB/E,KAAK,CAACgF,aADzB,EAECC,OAFD,CAES,CAFT,CADH,EAGgB,GAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAYE;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,4BACGjF,KAAK,CAACkF,KAAN,CAAYtB,GAAZ,CAAiBuB,IAAD,iBACf;AACE,oBAAA,GAAG,EAAEA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,GADtB;AAEE,oBAAA,GAAG,EAAEF,IAAI,CAAC/C,IAFZ;AAIE,oBAAA,OAAO,EAAE,MACPsC,mBAAmB,CAAC1E,KAAK,CAAC8B,EAAP,EAAW9B,KAAX;AALvB,qBAGOmF,IAAI,CAACrD,EAHZ;AAAA;AAAA;AAAA;AAAA,0BADD;AADH;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA0BE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,0CACE;AAAA,+BACG9B,KAAK,CAACsF,IADT,OACgBtF,KAAK,CAACuF,IADtB;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAA,8BAAOvF,KAAK,CAACwF;AAAb;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE;AAAK,kBAAA,SAAS,EAAC,SAAf;AAAA,yCACE;AACE,oBAAA,SAAS,EAAC,gBADZ;AAEE,oBAAA,OAAO,EAAE,MACPd,mBAAmB,CAAC1E,KAAK,CAAC8B,EAAP,EAAW9B,KAAX,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1BF;AAAA,eAA4BA,KAAK,CAAC8B,EAAlC;AAAA;AAAA;AAAA;AAAA,oBADD,CAPH;AAAA,0BADD,gBAyDC;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,QAAT;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,MAAT;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AA1DJ;AAAA;AAAA;AAAA;AAAA,gBAhGJ,EAyKGZ,YAAY,iBACX;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE,QAAC,WAAD;AAAa,0BAAW,YAAxB;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,0BAAT;AAAoC,cAAA,SAAS,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAKE;AAAA,wBAAOlB,KAAK,CAAC8B;AAAb;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1KJ,EAqLGf,QAAQ,KAAK,SAAb,iBACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,uBACGI,IAAI,CAACsB,SAAL,CAAemB,GAAf,CAAmB,CAACY,IAAD,EAAOiB,KAAP,kBAClB;AAEE,cAAA,SAAS,EACPA,KAAK,GAAG,CAAR,KAAc3F,SAAd,GACI,+BADJ,GAEI,gBALR;AAOE,cAAA,OAAO,EAAE,MACP2E,oBAAoB,CAClBD,IAAI,CAACpC,IADa,EAElBoC,IAAI,CAACnC,OAFa,EAGlBmC,IAAI,CAACjB,IAHa,EAIlBiB,IAAI,CAACpB,KAJa,EAKlBoB,IAAI,CAACnB,OALa,EAMlBmB,IAAI,CAAClB,MANa,EAOlBkB,IAAI,CAAChB,UAPa,EAQlBgB,IAAI,CAAC1C,EARa,CARxB;AAAA,sCAoBE;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBApBF,eAqBE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AAAA,6BACG0C,IAAI,CAACpC,IADR,OACeoC,IAAI,CAACnC,OADpB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAA,6BACGmC,IAAI,CAAClB,MADR,OACiBkB,IAAI,CAACnB,OADtB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAOE;AAAA,6BACGmB,IAAI,CAAChB,UADR,OACqBgB,IAAI,CAACjB,IAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAUE;AAAA,uCAAaiB,IAAI,CAACpB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF,eAWE;AAAG,kBAAA,OAAO,EAAE,MAAMkB,oBAAoB,CAACE,IAAI,CAAC1C,EAAN,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,sBArBF;AAAA,eACO0C,IAAI,CAAC1C,EADZ;AAAA;AAAA;AAAA;AAAA,oBADD,CADH,eAwCE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,sCACE,QAAC,QAAD;AACE,gBAAA,OAAO,EAAElC,kBADX;AAEE,gBAAA,QAAQ,EAAEoE,eAFZ;AAGE,gBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AACE,gBAAA,KAAK,EAAE;AAAE0B,kBAAAA,QAAQ,EAAE,QAAZ;AAAsBC,kBAAAA,OAAO,EAAE;AAA/B,iBADT;AAEE,gBAAA,OAAO,EAAE,MAAM7B,iBAAiB,EAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eA0DE;AAAA,sBAAOpE;AAAP;AAAA;AAAA;AAAA;AAAA,kBA1DF,eA2DE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBA3DF,eA4DE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,KAAK,EAAElB,gBAFT;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,QAAQ,EAAGyF,CAAD,IAAOxF,mBAAmB,CAACwF,CAAC,CAACC,MAAF,CAASW,KAAV;AALtC;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,SAAD;AACE,cAAA,KAAK,EAAC,SADR;AAEE,cAAA,KAAK,EAAEnG,mBAFT;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,QAAQ,EAAGuF,CAAD,IAAOtF,sBAAsB,CAACsF,CAAC,CAACC,MAAF,CAASW,KAAV;AALzC;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5DF,eA4EE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,OADR;AAEE,YAAA,KAAK,EAAE7F,UAFT;AAGE,YAAA,IAAI,EAAC,KAHP;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,SAAS,EAAC,aALZ;AAME,YAAA,QAAQ,EAAGiF,CAAD,IAAOhF,aAAa,CAACgF,CAAC,CAACC,MAAF,CAASW,KAAV;AANhC;AAAA;AAAA;AAAA;AAAA,kBA5EF,eAoFE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,KAAK,EAAC,QADR;AAEE,cAAA,KAAK,EAAE3F,WAFT;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,QAAQ,EAAG+E,CAAD,IAAO9E,cAAc,CAAC8E,CAAC,CAACC,MAAF,CAASW,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,SAAD;AACE,cAAA,KAAK,EAAC,UADR;AAEE,cAAA,KAAK,EAAEzF,YAFT;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,QAAQ,EAAG6E,CAAD,IAAO5E,eAAe,CAAC4E,CAAC,CAACC,MAAF,CAASW,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApFF,eAoGE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,KAAK,EAAEvF,SAFT;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,QAAQ,EAAG2E,CAAD,IAAO1E,YAAY,CAAC0E,CAAC,CAACC,MAAF,CAASW,KAAV;AAL/B;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,SAAD;AACE,cAAA,KAAK,EAAC,aADR;AAEE,cAAA,KAAK,EAAErF,eAFT;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,QAAQ,EAAGyE,CAAD,IAAOxE,kBAAkB,CAACwE,CAAC,CAACC,MAAF,CAASW,KAAV,CALrC;AAME,cAAA,SAAS,EAAGZ,CAAD,IACTA,CAAC,CAAC2B,GAAF,KAAU,OAAV,GAAoBnC,cAAc,EAAlC,GAAuC;AAP3C;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApGF,eAwHE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,KAAK,EAAE;AAAEqB,cAAAA,OAAO,EAAEnD,MAAM,KAAK,KAAX,GAAmB,MAAnB,GAA4B;AAAvC,aAFT;AAGE,YAAA,OAAO,EAAE,MAAMoC,UAAU,EAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxHF,eAgIE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,KAAK,EAAE;AAAEe,cAAAA,OAAO,EAAEnD,MAAM,KAAK,QAAX,GAAsB,MAAtB,GAA+B;AAA1C,aAFT;AAGE,YAAA,OAAO,EAAE,MAAM8B,cAAc,EAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhIF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtLJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAiWD,CA7nBD;;GAAMtF,W;UAwBalB,W,EACDE,U,EACCC,W,EAKIC,W,EASEA,W;;;KAxCnBc,W;AA+nBN,MAAM0H,iBAAiB,GAAGtI,MAAM,CAACuI,GAAI;AACrtQA;MAAMD,iB;AAuQN,eAAe1H,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//react router\r\nimport { useLocation } from \"react-router\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n//redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//actions\r\nimport { loadUsersOrders } from \"../actions/ordersAction\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//material ui\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\n//icons\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n//axios\r\nimport axios from \"axios\";\r\n//encrypting password\r\nimport sha512 from \"crypto-js/sha512\";\r\nimport Base64 from \"crypto-js/enc-base64\";\r\n//components\r\nimport Order from \"../components/Order\";\r\n\r\nconst AccountPage = () => {\r\n  const [deleteInfo, setDeleteInfo] = useState(false);\r\n  //users State\r\n  const [usersName, setUsersName] = useState(\"\");\r\n  const [usersAddressName, setUsersAddressName] = useState(\"\");\r\n  const [usersAddressSurname, setUsersAddressSurname] = useState(\"\");\r\n  const [usersSurname, setUsersSurname] = useState(\"\");\r\n  const [usersEmail, setUsersEmail] = useState(\"\");\r\n  const [usersPhone, setUsersPhone] = useState(\"\");\r\n  const [usersStreet, setUsersStreet] = useState(\"\");\r\n  const [usersHouseNr, setUsersHouseNr] = useState(\"\");\r\n  const [usersCity, setUsersCity] = useState(\"\");\r\n  const [usersPostalCode, setUsersPostalCode] = useState(\"\");\r\n  const [addressMsg, setAddressMsg] = useState(\"\");\r\n  const [newAddressCheckbox, setNewAddressCheckbox] = useState(false);\r\n  const [addressId, setAddressId] = useState(1);\r\n  const [order, setOrder] = useState([]);\r\n  //account state\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState(\"\");\r\n  const [accountErrorMsg, setAccountErrorMsg] = useState(\"\");\r\n  //use\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  //pathName\r\n  const pathName = location.pathname.split(\"/\")[3];\r\n  const orderDetails = location.pathname.split(\"/\")[4];\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const { isLogged } = useSelector((state) => state.login);\r\n  const [action, setAction] = useState(\"change\");\r\n  const appLink = `https://benzen-server.herokuapp.com`;\r\n\r\n  useEffect(() => {\r\n    if (isLogged && user) {\r\n      dispatch(loadUsersOrders(user.id));\r\n    }\r\n  }, [dispatch, isLogged, user]);\r\n  const { userOrders } = useSelector((state) => state.orders);\r\n  //handlers\r\n  //changes name, surname, email for user\r\n  const userAccountHandler = () => {\r\n    if (\r\n      usersName !== \"\" &&\r\n      usersSurname !== \"\" &&\r\n      usersEmail !== \"\" &&\r\n      usersEmail.includes(\"@\")\r\n    ) {\r\n      axios\r\n        .put(`${appLink}/users/${user.id}/`, {\r\n          name: usersName,\r\n          surname: usersSurname,\r\n          email: usersEmail,\r\n          password: user.password,\r\n          favorites: user.favorites,\r\n          addresses: user.addresses,\r\n          accessibility: user.accessibility,\r\n        })\r\n        .then((resp) => {\r\n          setPasswordErrorMsg(\"success\");\r\n        })\r\n        .catch((error) => {});\r\n    } else {\r\n      setAccountErrorMsg(\"Inputs cant be empty\");\r\n    }\r\n  };\r\n  //checks if inputs are empty, then it checks if password coded to sha512 matches user password then it checks if newPassword input matches  if so it changes user's password\r\n  const passwordChangeHandler = () => {\r\n    if (oldPassword !== \"\" && newPassword !== \"\" && confirmNewPassword !== \"\") {\r\n      if (sha512(oldPassword).toString(Base64) === user.password) {\r\n        if (newPassword === confirmNewPassword) {\r\n          axios\r\n            .put(`${appLink}/users/${user.id}/`, {\r\n              name: user.name,\r\n              surname: user.surname,\r\n              email: user.email,\r\n              password: sha512(newPassword).toString(Base64),\r\n              favorites: user.favorites,\r\n              addresses: user.addresses,\r\n              accessibility: user.accessibility,\r\n            })\r\n            .then((resp) => {\r\n              setPasswordErrorMsg(\"Password changed successfully\");\r\n            })\r\n            .catch((error) => {});\r\n        } else {\r\n          setPasswordErrorMsg(\"passwords don't match\");\r\n        }\r\n      } else {\r\n        setPasswordErrorMsg(\"wrong password\");\r\n      }\r\n    } else {\r\n      setPasswordErrorMsg(\"Inputs cant be empty\");\r\n    }\r\n  };\r\n  const deleteAccountHandler = () => {\r\n    axios\r\n      .delete(`${appLink}/users/${user.id}/`)\r\n      .then((resp) => {\r\n        LogOutHandler();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  //sets inputs value to users data\r\n  useEffect(() => {\r\n    if (isLogged) {\r\n      setUsersName(user.name);\r\n      setUsersSurname(user.surname);\r\n      setUsersAddressName(user.name);\r\n      setUsersAddressSurname(user.surname);\r\n      setUsersEmail(user.email);\r\n\r\n      if (user.addresses[0]) {\r\n        setUsersPhone(user.addresses[0].phone);\r\n        setUsersHouseNr(user.addresses[0].houseNr);\r\n        setUsersStreet(user.addresses[0].street);\r\n        setUsersCity(user.addresses[0].city);\r\n        setUsersPostalCode(user.addresses[0].postalCode);\r\n      }\r\n    }\r\n  }, [user, isLogged]);\r\n\r\n  //edits address\r\n  const addressHandler = () => {\r\n    if (\r\n      usersAddressName !== \"\" &&\r\n      usersAddressSurname !== \"\" &&\r\n      usersPhone !== \"\" &&\r\n      usersPhone.length === 9 &&\r\n      usersHouseNr !== \"\" &&\r\n      usersStreet !== \"\" &&\r\n      usersCity !== \"\" &&\r\n      usersPostalCode !== \"\"\r\n    ) {\r\n      const newAddress = user.addresses.map((location) =>\r\n        location.id === addressId\r\n          ? (location = {\r\n              name: usersAddressName,\r\n              surname: usersAddressSurname,\r\n              phone: usersPhone,\r\n              houseNr: usersHouseNr,\r\n              street: usersStreet,\r\n              city: usersCity,\r\n              postalCode: usersPostalCode,\r\n              id: addressId,\r\n            })\r\n          : location\r\n      );\r\n      axios\r\n        .put(`${appLink}/users/${user.id}/`, {\r\n          name: user.name,\r\n          surname: user.surname,\r\n          email: user.email,\r\n          password: user.password,\r\n          favorites: user.favorites,\r\n          addresses: newAddress,\r\n          accessibility: user.accessibility,\r\n        })\r\n        .then((resp) => {\r\n          alert(\"address changed succesfully\");\r\n        })\r\n        .catch((error) => {});\r\n    } else {\r\n      setAddressMsg(\"Inputs cant be empty\");\r\n    }\r\n  };\r\n  //adds address\r\n  const newAddressHandler = () => {\r\n    setNewAddressCheckbox(true);\r\n    setAddressId(0);\r\n    setAction(\"add\");\r\n    setUsersAddressName(\"\");\r\n    setUsersAddressSurname(\"\");\r\n    setUsersEmail(\"\");\r\n    setUsersPhone(\"\");\r\n    setUsersHouseNr(\"\");\r\n    setUsersStreet(\"\");\r\n    setUsersCity(\"\");\r\n    setUsersPostalCode(\"\");\r\n  };\r\n  useEffect(() => {\r\n    if (isLogged && user) {\r\n      if (user.addresses.length === 0) {\r\n        newAddressHandler();\r\n      }\r\n    }\r\n  }, [user, isLogged]);\r\n  const addAddress = () => {\r\n    if (\r\n      usersAddressName !== \"\" &&\r\n      usersAddressSurname !== \"\" &&\r\n      usersPhone !== \"\" &&\r\n      usersPhone.length === 9 &&\r\n      usersHouseNr !== \"\" &&\r\n      usersStreet !== \"\" &&\r\n      usersCity !== \"\" &&\r\n      usersPostalCode !== \"\"\r\n    ) {\r\n      axios\r\n        .put(`https://benzen-server.herokuapp.com/users/${user.id}/`, {\r\n          name: user.name,\r\n          surname: user.surname,\r\n          email: user.email,\r\n          password: user.password,\r\n          favorites: user.favorites,\r\n          accessibility: user.accessibility,\r\n          addresses: [\r\n            ...user.addresses,\r\n            {\r\n              name: usersAddressName,\r\n              surname: usersAddressSurname,\r\n              phone: usersPhone,\r\n              houseNr: usersHouseNr,\r\n              street: usersStreet,\r\n              city: usersCity,\r\n              postalCode: usersPostalCode,\r\n              id: user.addresses.length !== 0 ? user.addresses.length + 1 : 1,\r\n            },\r\n          ],\r\n        })\r\n        .then((resp) => {\r\n          alert(\"Address added successfully\");\r\n        })\r\n        .catch((error) => {});\r\n    } else {\r\n      alert(\"inputs cant be empty\");\r\n    }\r\n  };\r\n  const checkboxHandler = (e) => {\r\n    setNewAddressCheckbox(e.target.checked);\r\n    if (newAddressCheckbox === false) {\r\n      newAddressHandler();\r\n    }\r\n  };\r\n  const LogOutHandler = () => {\r\n    localStorage.removeItem(\"userId\");\r\n    history.push(\"/customer/account/login\");\r\n  };\r\n  //deletes address\r\n  const deleteAddressHandler = (id) => {\r\n    axios\r\n      .put(`${appLink}/users/${user.id}/`, {\r\n        name: user.name,\r\n        surname: user.surname,\r\n        email: user.email,\r\n        password: user.password,\r\n        favorites: user.favorites,\r\n        addresses: user.addresses.filter((info) => info.id !== id),\r\n        orders: user.orders,\r\n        accessibility: user.accessibility,\r\n      })\r\n      .then((resp) => {\r\n        alert(\"Address deleted successfully\");\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const chooseAddressHandler = (\r\n    name,\r\n    surname,\r\n    city,\r\n    phone,\r\n    houseNr,\r\n    street,\r\n    postalCode,\r\n    id\r\n  ) => {\r\n    setUsersAddressName(name);\r\n    setUsersAddressSurname(surname);\r\n    setUsersCity(city);\r\n    setUsersPhone(phone);\r\n    setUsersHouseNr(houseNr);\r\n    setUsersStreet(street);\r\n    setUsersPostalCode(postalCode);\r\n    setAction(\"change\");\r\n    setAddressId(id);\r\n    setNewAddressCheckbox(false);\r\n  };\r\n  const orderDetailsHandler = (id, order) => {\r\n    history.push(`/customer/account/orders/${id}`);\r\n    setOrder(order);\r\n    window.scrollTo(0, 0);\r\n  };\r\n  return (\r\n    <>\r\n      {isLogged && (\r\n        <LoggedInComponent>\r\n          <div className=\"left-side\">\r\n            <ul>\r\n              <Link to=\"/customer/account/orders\" className=\"link\">\r\n                <li className={pathName === \"orders\" ? \"active\" : \"\"}>\r\n                  <ShoppingBasketIcon /> Orders\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/customer/account/address\" className=\"link\">\r\n                <li className={pathName === \"address\" ? \"active\" : \"\"}>\r\n                  <HomeIcon /> Address data\r\n                </li>\r\n              </Link>\r\n\r\n              <Link to=\"/customer/account/info\" className=\"link\">\r\n                <li className={pathName === \"info\" ? \"active\" : \"\"}>\r\n                  <AccountBoxIcon /> Account info\r\n                </li>\r\n              </Link>\r\n              <li className=\"log-out\" onClick={() => LogOutHandler()}>\r\n                <MeetingRoomIcon /> Log out\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {user && (\r\n            <div className=\"right-side\">\r\n              {pathName === \"info\" && (\r\n                <div className=\"infoComponent\">\r\n                  <div className=\"info\">\r\n                    <span>My account</span>\r\n                    <div className=\"line\"></div>\r\n                    <span>{accountErrorMsg}</span>\r\n\r\n                    <span>\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        value={usersName}\r\n                        className=\"input\"\r\n                        required\r\n                        onChange={(e) => setUsersName(e.target.value)}\r\n                      />\r\n                    </span>\r\n                    <span>\r\n                      <TextField\r\n                        label=\"Surname\"\r\n                        value={usersSurname}\r\n                        required\r\n                        className=\"input\"\r\n                        onChange={(e) => setUsersSurname(e.target.value)}\r\n                      />\r\n                    </span>\r\n                    <span>\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        required\r\n                        value={usersEmail}\r\n                        className=\"input\"\r\n                        onChange={(e) => setUsersEmail(e.target.value)}\r\n                      />\r\n                    </span>\r\n                    <button onClick={() => userAccountHandler()}>\r\n                      Save Changes\r\n                    </button>\r\n                    <div className=\"line\"></div>\r\n                    <div className=\"password-change\">\r\n                      <span>Password change</span>\r\n                      <span>{passwordErrorMsg}</span>\r\n                      <TextField\r\n                        label=\"Your Password\"\r\n                        type=\"password\"\r\n                        value={oldPassword}\r\n                        required\r\n                        className=\"input\"\r\n                        onChange={(e) => setOldPassword(e.target.value)}\r\n                      />\r\n                      <TextField\r\n                        label=\"New password\"\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        required\r\n                        className=\"input\"\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                      />\r\n                      <TextField\r\n                        label=\"Confirm password\"\r\n                        type=\"email\"\r\n                        value={confirmNewPassword}\r\n                        required\r\n                        className=\"input\"\r\n                        onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                      />\r\n                      <button onClick={() => passwordChangeHandler()}>\r\n                        Change\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"line\"></div>\r\n                    <div className=\"delete-acc\">\r\n                      <span onClick={() => setDeleteInfo(true)}>\r\n                        Delete account\r\n                      </span>\r\n                      <div\r\n                        style={{ display: deleteInfo ? \"block\" : \"none\" }}\r\n                        className=\"delete-confirmation\"\r\n                      >\r\n                        <span>Are you sure you want to delete account?</span>\r\n                        <div className=\"buttons\">\r\n                          <button onClick={() => deleteAccountHandler()}>\r\n                            Yes\r\n                          </button>\r\n                          <button onClick={() => setDeleteInfo(false)}>\r\n                            No\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"line\"></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {pathName === \"orders\" && !orderDetails && (\r\n                <div className=\"orders\">\r\n                  {userOrders.length > 0 ? (\r\n                    <>\r\n                      <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <span>My account</span>\r\n                        <Link to=\"/customer/account/orders\" className=\"link\">\r\n                          My orders\r\n                        </Link>\r\n                      </Breadcrumbs>\r\n                      {userOrders.map((order) => (\r\n                        <div className=\"order\" key={order.id}>\r\n                          <div className=\"order-left\">\r\n                            <div className=\"price-info\">\r\n                              <span>Nr:{order.id}</span>\r\n                              <span>\r\n                                <b>\r\n                                  {(\r\n                                    order.cartPrice + order.deliveryPrice\r\n                                  ).toFixed(2)}{\" \"}\r\n                                  GBP\r\n                                </b>\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"items-image\">\r\n                              {order.items.map((item) => (\r\n                                <img\r\n                                  src={item.images[0].img}\r\n                                  alt={item.name}\r\n                                  key={item.id}\r\n                                  onClick={() =>\r\n                                    orderDetailsHandler(order.id, order)\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"order-right\">\r\n                            <div className=\"time-info\">\r\n                              <span>\r\n                                {order.date} {order.time}\r\n                              </span>\r\n                              <span>{order.status}</span>\r\n                            </div>\r\n                            <div className=\"details\">\r\n                              <span\r\n                                className=\"details-button\"\r\n                                onClick={() =>\r\n                                  orderDetailsHandler(order.id, order)\r\n                                }\r\n                              >\r\n                                Details\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"no-orders\">\r\n                      <h2>You didnt order anything</h2>\r\n                      <span>Go and explore</span>\r\n                      <div className=\"buttons\">\r\n                        <Link to=\"/woman\">\r\n                          <button>Women</button>\r\n                        </Link>\r\n                        <Link to=\"/man\">\r\n                          <button>Men</button>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {orderDetails && (\r\n                <div className=\"specific-order\">\r\n                  <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <span>My account</span>\r\n                    <Link to=\"/customer/account/orders\" className=\"link\">\r\n                      My orders\r\n                    </Link>\r\n                    <span>{order.id}</span>\r\n                  </Breadcrumbs>\r\n                  <Order />\r\n                </div>\r\n              )}\r\n              {pathName === \"address\" && (\r\n                <div className=\"addressComponent\">\r\n                  <h2>My account</h2>\r\n                  <div className=\"line\"></div>\r\n                  <h2>Addresses</h2>\r\n                  <div className=\"choose-address\">\r\n                    {user.addresses.map((info, index) => (\r\n                      <div\r\n                        key={info.id}\r\n                        className={\r\n                          index + 1 === addressId\r\n                            ? \"single-address active-address\"\r\n                            : \"single-address\"\r\n                        }\r\n                        onClick={() =>\r\n                          chooseAddressHandler(\r\n                            info.name,\r\n                            info.surname,\r\n                            info.city,\r\n                            info.phone,\r\n                            info.houseNr,\r\n                            info.street,\r\n                            info.postalCode,\r\n                            info.id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div className=\"checkbox\"></div>\r\n                        <div className=\"address-info\">\r\n                          <span>\r\n                            {info.name} {info.surname}\r\n                          </span>\r\n                          <span>\r\n                            {info.street} {info.houseNr}\r\n                          </span>\r\n                          <span>\r\n                            {info.postalCode} {info.city}\r\n                          </span>\r\n                          <span> Tel. {info.phone}</span>\r\n                          <p onClick={() => deleteAddressHandler(info.id)}>\r\n                            Delete address\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                    <div className=\"address\">\r\n                      <Checkbox\r\n                        checked={newAddressCheckbox}\r\n                        onChange={checkboxHandler}\r\n                        color=\"primary\"\r\n                      />\r\n                      <span\r\n                        style={{ fontSize: \"0.8rem\", padding: \"1rem 0\" }}\r\n                        onClick={() => newAddressHandler()}\r\n                      >\r\n                        Add new address\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <span>{addressMsg}</span>\r\n                  <div className=\"line\"></div>\r\n                  <div className=\"two-inputs\">\r\n                    <TextField\r\n                      label=\"name\"\r\n                      value={usersAddressName}\r\n                      required\r\n                      className=\"input\"\r\n                      onChange={(e) => setUsersAddressName(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                      label=\"surname\"\r\n                      value={usersAddressSurname}\r\n                      required\r\n                      className=\"input\"\r\n                      onChange={(e) => setUsersAddressSurname(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <TextField\r\n                    label=\"phone\"\r\n                    value={usersPhone}\r\n                    type=\"tel\"\r\n                    required\r\n                    className=\"phone-input\"\r\n                    onChange={(e) => setUsersPhone(e.target.value)}\r\n                  />\r\n                  <div className=\"two-inputs\">\r\n                    <TextField\r\n                      label=\"street\"\r\n                      value={usersStreet}\r\n                      required\r\n                      className=\"input\"\r\n                      onChange={(e) => setUsersStreet(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                      label=\"house nr\"\r\n                      value={usersHouseNr}\r\n                      required\r\n                      className=\"input\"\r\n                      onChange={(e) => setUsersHouseNr(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"two-inputs\">\r\n                    <TextField\r\n                      label=\"city\"\r\n                      value={usersCity}\r\n                      required\r\n                      className=\"input\"\r\n                      onChange={(e) => setUsersCity(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                      label=\"postal-code\"\r\n                      value={usersPostalCode}\r\n                      required\r\n                      className=\"input\"\r\n                      onChange={(e) => setUsersPostalCode(e.target.value)}\r\n                      onKeyDown={(e) =>\r\n                        e.key === \"Enter\" ? addressHandler() : \"\"\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    className=\"button-white\"\r\n                    style={{ display: action === \"add\" ? \"flex\" : \"none\" }}\r\n                    onClick={() => addAddress()}\r\n                  >\r\n                    Add\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"button-white\"\r\n                    style={{ display: action === \"change\" ? \"flex\" : \"none\" }}\r\n                    onClick={() => addressHandler()}\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </LoggedInComponent>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst LoggedInComponent = styled.div`\r\n  display: flex;\r\n  margin-top: 2rem;\r\n  min-height: 70vh;\r\n  @media screen and (max-width: 1000px) {\r\n    flex-direction: column;\r\n  }\r\n  .left-side {\r\n    width: 20%;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    flex-direction: column;\r\n    font-size: 1.5rem;\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      align-items: flex-start;\r\n      margin: 0rem 0.5rem;\r\n    }\r\n    .active {\r\n      font-weight: bold;\r\n    }\r\n    ul {\r\n      list-style: none;\r\n      li {\r\n        &:hover {\r\n          color: rgba(0, 0, 0, 0.6);\r\n        }\r\n      }\r\n      .log-out {\r\n        &:hover {\r\n          cursor: pointer;\r\n          color: #e0431c;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .right-side {\r\n    width: 60%;\r\n    justify-content: center;\r\n    align-items: Center;\r\n\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0rem 0.5rem;\r\n    }\r\n    .infoComponent {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-left: 2rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin: 0rem;\r\n      }\r\n      .info {\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: left;\r\n        button {\r\n          margin: 1rem 0rem;\r\n        }\r\n        .input {\r\n          width: 15rem;\r\n        }\r\n        .password-change {\r\n          display: flex;\r\n          flex-direction: column;\r\n          button {\r\n            margin: 1rem 0rem;\r\n          }\r\n        }\r\n        button {\r\n          width: fit-content;\r\n          background-color: black;\r\n          color: White;\r\n          border: 1px solid black;\r\n          font-size: 1.5rem;\r\n          &:hover {\r\n            background-color: white;\r\n            color: black;\r\n          }\r\n        }\r\n        .delete-acc {\r\n          .delete-confirmation {\r\n            display: flex;\r\n            flex-direction: column;\r\n            margin: 1rem 0rem;\r\n            .buttons {\r\n              button {\r\n                margin: 0.5rem 1rem;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .addressComponent {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-left: 2rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin: 0;\r\n      }\r\n      .choose-address {\r\n        display: flex;\r\n        align-items: start;\r\n        .active-address {\r\n          .checkbox {\r\n            background-color: black;\r\n          }\r\n        }\r\n        .single-address {\r\n          display: flex;\r\n          font-size: 0.8rem;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n          .checkbox {\r\n            border: 1px solid rgba(0, 0, 0, 0.2);\r\n            width: 1rem;\r\n            height: 1rem;\r\n            margin: 0 1rem;\r\n            @media screen and (max-width: 1000px) {\r\n              width: 1rem;\r\n              height: 1rem;\r\n              border-radius: 1rem;\r\n              margin: 0 0.5rem;\r\n            }\r\n          }\r\n          .address-info {\r\n            display: flex;\r\n            flex-direction: column;\r\n            p {\r\n              margin: 5px 0;\r\n              font-weight: bold;\r\n              &:hover {\r\n                cursor: pointer;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      .two-inputs {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        .input {\r\n          width: 100%;\r\n          margin-right: 10px;\r\n        }\r\n      }\r\n      .button-white {\r\n        @media screen and (max-width: 1000px) {\r\n          display: flex;\r\n          text-transform: upperCase;\r\n          justify-content: center;\r\n          width: 100%;\r\n          background-color: black;\r\n          margin: 1rem 0;\r\n          padding: 0;\r\n          font-size: 1.5rem;\r\n          color: White;\r\n        }\r\n      }\r\n    }\r\n    .line {\r\n      width: 100%;\r\n      height: 1px;\r\n      background-color: black;\r\n      margin: 2rem 0rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin: 1rem 0;\r\n        width: 90%;\r\n      }\r\n    }\r\n    .no-orders {\r\n      display: flex;\r\n      flex-direction: column;\r\n      text-align: center;\r\n      .buttons {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        button {\r\n          font-size: 1.5rem;\r\n          width: 8rem;\r\n          background-color: black;\r\n          color: White;\r\n          margin: 1rem;\r\n          &:hover {\r\n            background-color: rgba(0, 0, 0, 0.8);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    font-size: 2rem;\r\n    .orders {\r\n      margin-left: 2rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin-left: 0;\r\n      }\r\n      .order {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        font-size: 1.5rem;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n        padding: 1rem;\r\n\r\n        .order-left {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: space-between;\r\n          .price-info {\r\n            display: flex;\r\n            flex-direction: column;\r\n            font-size: 1rem;\r\n          }\r\n          .items-image {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            img {\r\n              margin: 0.5rem 0.5rem 0.5rem 0;\r\n              height: 10rem;\r\n              width: 8rem;\r\n            }\r\n          }\r\n        }\r\n        .order-right {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: space-between;\r\n          .time-info {\r\n            display: flex;\r\n            flex-direction: column;\r\n            font-size: 1rem;\r\n            span {\r\n              align-self: flex-end;\r\n            }\r\n          }\r\n          .details {\r\n            align-self: flex-end;\r\n            span {\r\n              padding: 0.6rem;\r\n              font-size: 1rem;\r\n              font-weight: bold;\r\n              text-transform: upperCase;\r\n              &:hover {\r\n                background-color: rgba(0, 0, 0, 0.2);\r\n                cursor: pointer;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .specific-order {\r\n      margin-left: 2rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      font-size: 1.5rem;\r\n      @media screen and (max-width: 1000px) {\r\n        margin-left: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default AccountPage;\r\n"]},"metadata":{},"sourceType":"module"}