{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\components\\\\Address.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //actions\n\nimport { deleteAddress } from \"../actions/userActions\"; //redux\n\nimport { useDispatch } from \"react-redux\"; //material ui\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst Address = ({\n  address,\n  chooseAddressHandler,\n  setAddressId,\n  userId,\n  addressId\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [checkbox, setCheckbox] = useState(false);\n\n  const checkboxHandler = () => {\n    setCheckbox(true);\n    setAddressId(address._id);\n    chooseAddressHandler(address);\n  };\n\n  useEffect(() => {\n    if (addressId === address._id) {\n      setCheckbox(true);\n    } else {\n      setCheckbox(false);\n    }\n  }, [address._id, addressId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-address\",\n    onClick: () => chooseAddressHandler(address.city, address.houseNr, address.street, address.postalCode, address.phone, address._id),\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checkbox,\n      onChange: checkboxHandler,\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [address.name, \" \", address.surname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [address.street, \" \", address.houseNr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [address.postalCode, \" \", address.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Tel. \", address.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => dispatch(deleteAddress(userId, address._id)),\n        children: \"Delete address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Address, \"voIXyOmS1DWEEaURyIWYGMvGeOY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Address;\nexport default Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/components/Address.js"],"names":["React","useState","useEffect","deleteAddress","useDispatch","Checkbox","Address","address","chooseAddressHandler","setAddressId","userId","addressId","dispatch","checkbox","setCheckbox","checkboxHandler","_id","city","houseNr","street","postalCode","phone","name","surname"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,OADe;AAEfC,EAAAA,oBAFe;AAGfC,EAAAA,YAHe;AAIfC,EAAAA,MAJe;AAKfC,EAAAA;AALe,CAAD,KAMV;AAAA;;AACJ,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMc,eAAe,GAAG,MAAM;AAC5BD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAL,IAAAA,YAAY,CAACF,OAAO,CAACS,GAAT,CAAZ;AACAR,IAAAA,oBAAoB,CAACD,OAAD,CAApB;AACD,GAJD;;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,SAAS,KAAKJ,OAAO,CAACS,GAA1B,EAA+B;AAC7BF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GANQ,EAMN,CAACP,OAAO,CAACS,GAAT,EAAcL,SAAd,CANM,CAAT;AAOA,sBACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAE,MACPH,oBAAoB,CAClBD,OAAO,CAACU,IADU,EAElBV,OAAO,CAACW,OAFU,EAGlBX,OAAO,CAACY,MAHU,EAIlBZ,OAAO,CAACa,UAJU,EAKlBb,OAAO,CAACc,KALU,EAMlBd,OAAO,CAACS,GANU,CAHxB;AAAA,4BAaE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEH,QAAnB;AAA6B,MAAA,QAAQ,EAAEE,eAAvC;AAAwD,MAAA,KAAK,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA,mBACGR,OAAO,CAACe,IADX,OACkBf,OAAO,CAACgB,OAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,mBACGhB,OAAO,CAACY,MADX,OACoBZ,OAAO,CAACW,OAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,mBACGX,OAAO,CAACa,UADX,OACwBb,OAAO,CAACU,IADhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAA,6BAAaV,OAAO,CAACc,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAG,QAAA,OAAO,EAAE,MAAMT,QAAQ,CAACT,aAAa,CAACO,MAAD,EAASH,OAAO,CAACS,GAAjB,CAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CArDD;;GAAMV,O;UAOaF,W;;;KAPbE,O;AAuDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//actions\r\nimport { deleteAddress } from \"../actions/userActions\";\r\n//redux\r\nimport { useDispatch } from \"react-redux\";\r\n//material ui\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst Address = ({\r\n  address,\r\n  chooseAddressHandler,\r\n  setAddressId,\r\n  userId,\r\n  addressId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [checkbox, setCheckbox] = useState(false);\r\n  const checkboxHandler = () => {\r\n    setCheckbox(true);\r\n    setAddressId(address._id);\r\n    chooseAddressHandler(address);\r\n  };\r\n  useEffect(() => {\r\n    if (addressId === address._id) {\r\n      setCheckbox(true);\r\n    } else {\r\n      setCheckbox(false);\r\n    }\r\n  }, [address._id, addressId]);\r\n  return (\r\n    <div\r\n      className=\"single-address\"\r\n      onClick={() =>\r\n        chooseAddressHandler(\r\n          address.city,\r\n          address.houseNr,\r\n          address.street,\r\n          address.postalCode,\r\n          address.phone,\r\n          address._id\r\n        )\r\n      }\r\n    >\r\n      <Checkbox checked={checkbox} onChange={checkboxHandler} color=\"primary\" />\r\n      <div className=\"address-info\">\r\n        <span>\r\n          {address.name} {address.surname}\r\n        </span>\r\n        <span>\r\n          {address.street} {address.houseNr}\r\n        </span>\r\n        <span>\r\n          {address.postalCode} {address.city}\r\n        </span>\r\n        <span> Tel. {address.phone}</span>\r\n        <p onClick={() => dispatch(deleteAddress(userId, address._id))}>\r\n          Delete address\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n"]},"metadata":{},"sourceType":"module"}