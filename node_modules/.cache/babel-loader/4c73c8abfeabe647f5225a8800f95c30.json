{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\Programowanko\\\\Projekty\\\\benzen\\\\client\\\\src\\\\components\\\\AddressModal.js\";\nimport React from \"react\"; //styling\n\nimport styled from \"styled-components\"; //icons\n\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport CloseIcon from \"@material-ui/icons/Close\"; //components\n\nimport Button from \"../components/Button\";\nimport Address from \"../components/Address\";\n\nconst AddressModal = ({\n  addressModal,\n  setModal,\n  modalHandler,\n  editModalHandler,\n  setAddressData,\n  areInputsEmpty,\n  setAddressId,\n  setChosenAddress,\n  addressId,\n  user\n}) => {\n  var _user$address;\n\n  //handlers\n  const chooseButton = () => {\n    if (areInputsEmpty()) {\n      setChosenAddress(true);\n      setModal(false);\n    }\n  };\n\n  const chooseAddressHandler = ({\n    _id,\n    city,\n    postalCode,\n    street,\n    houseNr\n  }) => {\n    setAddressData({\n      city: city,\n      postalCode: postalCode,\n      street: street,\n      houseNr: houseNr\n    });\n    setAddressId(_id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressModalComponent, {\n    style: {\n      display: addressModal ? \"block\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"address-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Delivery address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"close-modal\",\n          onClick: () => setModal(!addressModal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [user === null || user === void 0 ? void 0 : (_user$address = user.address) === null || _user$address === void 0 ? void 0 : _user$address.map(address => /*#__PURE__*/_jsxDEV(Address, {\n          chooseAddressHandler: chooseAddressHandler,\n          address: address,\n          userId: user._id,\n          setAddressId: setAddressId,\n          addressId: addressId,\n          editModalHandler: editModalHandler,\n          deliveryAddress: true\n        }, address._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-add-address\",\n          onClick: () => modalHandler(),\n          children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), \" Add new address\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choose-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"black\",\n            label: \"Choose\",\n            onClick: () => chooseButton()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddressModal;\nconst AddressModalComponent = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: rgba(0, 0, 0, 0.4);\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  .address-wrapper {\n    background-color: white;\n    margin-left: 40%;\n    margin-top: 5%;\n    width: 40%;\n    @media screen and (max-width: 1000px) {\n      width: 100%;\n      margin: 0;\n    }\n    .address-header {\n      padding: 1rem;\n      display: flex;\n      justify-content: space-between;\n      .close-modal {\n        &:hover {\n          cursor: pointer;\n        }\n      }\n    }\n    .active-address {\n      .checkbox {\n        background-color: black;\n      }\n    }\n    .button-add-address {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 10px 0;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n    .choose-button {\n      width: 100%;\n      font-size: 1.5rem;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      .button-black {\n        width: 100%;\n        margin: 1rem;\n        padding: 1rem;\n      }\n    }\n  }\n`;\n_c2 = AddressModalComponent;\nexport default AddressModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddressModal\");\n$RefreshReg$(_c2, \"AddressModalComponent\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/Programowanko/Projekty/benzen/client/src/components/AddressModal.js"],"names":["React","styled","AddCircleOutlineIcon","CloseIcon","Button","Address","AddressModal","addressModal","setModal","modalHandler","editModalHandler","setAddressData","areInputsEmpty","setAddressId","setChosenAddress","addressId","user","chooseButton","chooseAddressHandler","_id","city","postalCode","street","houseNr","display","address","map","AddressModalComponent","div"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//styling\r\nimport styled from \"styled-components\";\r\n//icons\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n//components\r\nimport Button from \"../components/Button\";\r\nimport Address from \"../components/Address\";\r\n\r\nconst AddressModal = ({\r\n  addressModal,\r\n  setModal,\r\n  modalHandler,\r\n  editModalHandler,\r\n  setAddressData,\r\n  areInputsEmpty,\r\n  setAddressId,\r\n  setChosenAddress,\r\n  addressId,\r\n  user,\r\n}) => {\r\n  //handlers\r\n  const chooseButton = () => {\r\n    if (areInputsEmpty()) {\r\n      setChosenAddress(true);\r\n      setModal(false);\r\n    }\r\n  };\r\n  const chooseAddressHandler = ({ _id, city, postalCode, street, houseNr }) => {\r\n    setAddressData({\r\n      city: city,\r\n      postalCode: postalCode,\r\n      street: street,\r\n      houseNr: houseNr,\r\n    });\r\n    setAddressId(_id);\r\n  };\r\n  return (\r\n    <AddressModalComponent style={{ display: addressModal ? \"block\" : \"none\" }}>\r\n      <div className=\"address-wrapper\">\r\n        <div className=\"address-header\">\r\n          <span>Delivery address</span>\r\n          <CloseIcon\r\n            className=\"close-modal\"\r\n            onClick={() => setModal(!addressModal)}\r\n          />\r\n        </div>\r\n        {user && (\r\n          <>\r\n            {user?.address?.map((address) => (\r\n              <Address\r\n                key={address._id}\r\n                chooseAddressHandler={chooseAddressHandler}\r\n                address={address}\r\n                userId={user._id}\r\n                setAddressId={setAddressId}\r\n                addressId={addressId}\r\n                editModalHandler={editModalHandler}\r\n                deliveryAddress={true}\r\n              />\r\n            ))}\r\n            <div className=\"button-add-address\" onClick={() => modalHandler()}>\r\n              <AddCircleOutlineIcon /> Add new address\r\n            </div>\r\n            <div className=\"choose-button\">\r\n              <Button\r\n                variant={\"black\"}\r\n                label=\"Choose\"\r\n                onClick={() => chooseButton()}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </AddressModalComponent>\r\n  );\r\n};\r\n\r\nconst AddressModalComponent = styled.div`\r\n  position: absolute;\r\n  z-index: 5;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  .address-wrapper {\r\n    background-color: white;\r\n    margin-left: 40%;\r\n    margin-top: 5%;\r\n    width: 40%;\r\n    @media screen and (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0;\r\n    }\r\n    .address-header {\r\n      padding: 1rem;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      .close-modal {\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n    .active-address {\r\n      .checkbox {\r\n        background-color: black;\r\n      }\r\n    }\r\n    .button-add-address {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 10px 0;\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .choose-button {\r\n      width: 100%;\r\n      font-size: 1.5rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      .button-black {\r\n        width: 100%;\r\n        margin: 1rem;\r\n        padding: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AddressModal;\r\n"]},"metadata":{},"sourceType":"module"}